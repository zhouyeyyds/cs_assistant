/*
 Navicat Premium Data Transfer

 Source Server         : test
 Source Server Type    : MySQL
 Source Server Version : 80022 (8.0.22)
 Source Host           : localhost:3306
 Source Schema         : test

 Target Server Type    : MySQL
 Target Server Version : 80022 (8.0.22)
 File Encoding         : 65001

 Date: 10/04/2023 21:32:18
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for course
-- ----------------------------
DROP TABLE IF EXISTS `course`;
CREATE TABLE `course`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `text` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `answer` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `a` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `b` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `c` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `d` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `cid` int NULL DEFAULT (1),
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 505 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of course
-- ----------------------------
INSERT INTO `course` VALUES (1, 'CPU响应中断的时间是_____。', 'c', '中断源提出请求；', '取指周期结束；', '执行周期结束；', '间址周期结束。', 1);
INSERT INTO `course` VALUES (2, '常用的虚拟存储器寻址系统由______两级存储器组成。', 'a', '主存－辅存；', 'Cache－主存；', 'Cache－辅存；', '主存—硬盘。', 1);
INSERT INTO `course` VALUES (3, 'DMA访问主存时，让CPU处于等待状态，等DMA的一批数据访问结束后，CPU再恢复工作，这种情况称作_____。', 'a', '停止CPU访问主存；', '周期挪用；', 'DMA与CPU交替访问；', 'DMA。', 1);
INSERT INTO `course` VALUES (4, '浮点数的表示X围和精度取决于______ 。', 'c', '阶码的位数和尾数的机器数形式；', '阶码的机器数形式和尾数的位数；', '阶码的位数和尾数的位数；　　　', '阶码的机器数形式和尾数的机器数形式。', 1);
INSERT INTO `course` VALUES (5, '加法器采用先行进位的目的是______ 。', 'c', '优化加法器的结构；', '节省器材；', '加速传递进位信号；', '增强加法器结构。', 1);
INSERT INTO `course` VALUES (6, '在独立请求方式下，若有N个设备，则______', 'b', '有一个总线请求信号和一个总线响应信号；', '有N个总线请求信号和N个总线响应信号；', '有一个总线请求信号和N个总线响应信号;', '有N个总线请求信号和一个总线响应信号。', 1);
INSERT INTO `course` VALUES (7, '主存和CPU之间增加高速缓冲存储器的目的是______。', 'a', '解决CPU和主存之间的速度匹配问题；', '扩大主存容量；', '既扩大主存容量，又提高了存取速度；', '扩大辅存容量。', 1);
INSERT INTO `course` VALUES (8, '在计数器定时查询方式下，若计数从0开始，则______。', 'a', '设备号小的优先级高；', '每个设备使用总线的机会相等；', '设备号大的优先级高。', NULL, 1);
INSERT INTO `course` VALUES (9, 'Cache的地址映象中，若主存中的任一块均可映射到Cache内的任一块的位置上，称作　　　。', 'b', '直接映象；', '全相联映象；', '组相联映象。', NULL, 1);
INSERT INTO `course` VALUES (10, '直接寻址的无条件转移指令功能是将指令中的地址码送入______。', 'a', 'PC； ', '地址寄存器；', '累加器；', 'ACC。', 1);
INSERT INTO `course` VALUES (11, '响应中断请求的条件是______。', 'b', '外设提出中断；           ', '外设工作完成和系统允许时；', '外设工作完成和中断标记触发器为“1”时。 ', 'CPU提出中断。', 1);
INSERT INTO `course` VALUES (12, '主机与设备传送数据时，采用______，主机与设备是串行工作的。', 'a', '程序查询方式；', '中断方式；', 'DMA方式；', '通道。', 1);
INSERT INTO `course` VALUES (13, '一个节拍信号的宽度是指______。', 'c', '指令周期；    ', '机器周期；      ', '时钟周期；    ', '存储周期。', 1);
INSERT INTO `course` VALUES (14, '零地址运算指令在指令格式中不给出操作数地址，它的操作数来自______。', 'c', '立即数和栈顶；', '暂存器；', '栈顶和次栈顶；', '累加器。', 1);
INSERT INTO `course` VALUES (15, '______可区分存储单元中存放的是指令还是数据。', 'c', '存储器；', '运算器；', '控制器;', '用户。', 1);
INSERT INTO `course` VALUES (16, '所谓三总线结构的计算机是指______。', 'b', '地址线、数据线和控制线三组传输线。', 'I/O总线、主存总统和DMA总线三组传输线；', 'I/O总线、主存总线和系统总线三组传输线；', '设备总线、主存总线和控制总线三组传输线', 1);
INSERT INTO `course` VALUES (17, '某计算机字长是32位，它的存储容量是256KB，按字编址，它的寻址X围是______。', 'b', '128K；', '64K；', '64KB；', '128KB。', 1);
INSERT INTO `course` VALUES (18, '主机与设备传送数据时，采用______，主机与设备是串行工作的。', 'a', '程序查询方式；', '中断方式；', 'DMA方式；', '通道。', 1);
INSERT INTO `course` VALUES (19, '在整数定点机中，下述第______种说法是正确的。', 'b', '原码和反码不能表示 -1，补码可以表示 -1；', '三种机器数均可表示 -1；', '三种机器数均可表示 -1，且三种机器数的表示X围相同；', '三种机器数均不可表示 -1。', 1);
INSERT INTO `course` VALUES (20, '变址寻址方式中，操作数的有效地址是______。', 'c', '基址寄存器内容加上形式地址（位移量）；', '程序计数器内容加上形式地址；', '变址寄存器内容加上形式地址；', '以上都不对。', 1);
INSERT INTO `course` VALUES (21, '向量中断是______。', 'c', '外设提出中断；', '由硬件形成中断服务程序入口地址；', '由硬件形成向量地址，再由向量地址找到中断服务程序入口地址', '以上都不对。', 1);
INSERT INTO `course` VALUES (22, '一个节拍信号的宽度是指______。', 'c', '指令周期；', '机器周期；', '时钟周期；', '存储周期。', 1);
INSERT INTO `course` VALUES (23, '将微程序存储在EPROM中的控制器是______控制器。', 'a', '静态微程序；', '毫微程序；', '动态微程序；', '微程序。', 1);
INSERT INTO `course` VALUES (24, '隐指令是指______。', 'd', '操作数隐含在操作码中的指令；', '在一个机器周期里完成全部操作的指令；', '指令系统中已有的指令；', '指令系统中没有的指令。', 1);
INSERT INTO `course` VALUES (25, '当用一个16位的二进制数表示浮点数时，下列方案中第_____种最好。', 'b', '阶码取4位（含阶符1位），尾数取12位（含数符1位）；', '阶码取5位（含阶符1位），尾数取11位（含数符1 位）；', '阶码取8位（含阶符1位），尾数取8位（含数符1位）；', '阶码取6位（含阶符1位），尾数取12位（含数符1位）。', 1);
INSERT INTO `course` VALUES (26, 'DMA方式______。', 'b', '既然能用于高速外围设备的信息传送，也就能代替中断方式；', '不能取代中断方式；', '也能向CPU请求中断处理数据传送；', '内无中断机制。', 1);
INSERT INTO `course` VALUES (27, '在中断周期中，由______将允许中断触发器置“0”。', 'd', '关中断指令；', '机器指令；', '开中断指令；', '中断隐指令。', 1);
INSERT INTO `course` VALUES (28, '在单总线结构的CPU中，连接在总线上的多个部件______。', 'b', '某一时刻只有一个可以向总线发送数据，并且只有一个可以从总线接收数据；', '某一时刻只有一个可以向总线发送数据，但可以有多个同时从总线接收数据；', '可以有多个同时向总线发送数据，并且可以有多个同时从总线接收数据；', '可以有多个同时向总线发送数据，但可以有一个同时从总线接收数据。', 1);
INSERT INTO `course` VALUES (29, '三种集中式总线控制中，______方式对电路故障最敏感。', 'a', '链式查询；', '计数器定时查询；', '独立请求；', '以上都不对。', 1);
INSERT INTO `course` VALUES (30, '一个16K×8位的存储器，其地址线和数据线的总和是______。', 'd', '48；', '46；', '17；', '22', 1);
INSERT INTO `course` VALUES (31, '在间址周期中，______。', 'c', '所有指令的间址操作都是相同的；', '凡是存储器间接寻址的指令，它们的操作都是相同的；', '对于存储器间接寻址或寄存器间接寻址的指令，它们的操作是不同的；', '以上都不对。', 1);
INSERT INTO `course` VALUES (32, '下述说法中______是正确的。', 'b', 'EPROM是可改写的，因而也是随机存储器的一种；', 'EPROM是可改写的，但它不能用作为随机存储器用；', 'EPROM只能改写一次，故不能作为随机存储器用；', 'EPROM是可改写的，但它能用作为随机存储器用。', 1);
INSERT INTO `course` VALUES (33, '打印机的分类方法很多，若按能否打印汉字来区分，可分为______。', 'c', '并行式打印机和串行式打印机；', '击打式打印机和非击打式打印机；', '点阵式打印机和活字式打印机；', '激光打印机和喷墨打印机。', 1);
INSERT INTO `course` VALUES (34, ' 在下列机器数______中，零的表示形式是唯一的。 ', 'b', '原码 ', '补码    ', '反码   ', '原码和反码 ', 1);
INSERT INTO `course` VALUES (35, ' CRT的分辨率为1024×1024，颜色深度为8位，则刷新存储器的存储容量是_____。 ', 'b', '2MB         ', '1MB       ', '8MB        ', '1024B ', 1);
INSERT INTO `course` VALUES (36, ' 在定点二进制运算器中，减法运算一般通过______来实现。 ', ' d', '原码运算的二进制减法器     ', '补码运算的二进制减法器 ', '补码运算的十进制加法器      ', '补码运算的二进制加法器 ', 1);
INSERT INTO `course` VALUES (37, ' 在指令的地址字段中，直接指出操作数本身的寻址方式，称为______。 ', 'b', ' 隐含寻址  ', ' 立即寻址   ', ' 寄存器寻址    ', ' 直接寻址 ', 1);
INSERT INTO `course` VALUES (38, ' 信息只用一条传输线 ，且采用脉冲传输的方式称为______。 ', 'a', '串行传输    ', '并行传输    ', '并串行传输    ', '分时传输 ', 1);
INSERT INTO `course` VALUES (39, ' 和外存储器相比，内存储器的特点是______。 ', 'c', '容量大、速度快、成本低      ', '容量大、速度慢、成本高 ', '容量小、速度快、成本高       ', '容量小、速度快、成本低 ', 1);
INSERT INTO `course` VALUES (40, ' CPU响应中断的时间是______。 ', 'c', '中断源提出请求    ', '取指周期结束     ', '执行周期结束。  ', NULL, 1);
INSERT INTO `course` VALUES (41, ' EPROM是指______。 ', 'c', ' 读写存储器                   ', ' 只读存储器      ', ' 可编程的只读存储器       ', ' 光擦除可编程的只读存储器 ', 1);
INSERT INTO `course` VALUES (42, ' 下列数中最小的数是______。 ', 'b', '（1101001）2     ', '（52）8      ', '（133）8     ', '（30）16 ', 1);
INSERT INTO `course` VALUES (43, ' 假定下列字符码中有奇偶校验位，但没有数据错误，采用偶校验的字符码是______/', 'd', '11001011      ', '11010110     ', '11000001      ', '11001001 ', 1);
INSERT INTO `course` VALUES (44, ' 单地址指令中为了完成两个数的算术运算，除地址码指明的一个操作数外，另一个数常需采用______。 ', 'c', ' 堆栈寻址方式   ', ' 立即寻址方式   ', '隐含寻址方式   ', ' 间接寻址方式 ', 1);
INSERT INTO `course` VALUES (45, ' 用于对某个寄存器中操作数的寻址方式称为______寻址。 ', 'c', ' 直接        ', ' 间接       ', ' 寄存器直接       ', ' 寄存器间接 ', 1);
INSERT INTO `course` VALUES (46, ' 中央处理器（CPU）包含______。 ', 'c', '运算器    ', '控制器    ', '运算器、控制器和cache     ', '运算器、控制器和主存储器 ', 1);
INSERT INTO `course` VALUES (47, ' 在CPU中跟踪指令后继地址的寄存器是______。', 'b', '主存地址寄存器    ', '程序计数器   ', '指令寄存器  ', '状态条件寄存器 ', 1);
INSERT INTO `course` VALUES (48, ' 在集中式总线仲裁中，______方式响应时间最快。 ', 'c', '链式查询      ', '计数器定时查询     ', '独立请求     ', '以上', 1);
INSERT INTO `course` VALUES (49, ' PCI总线的基本传输机制是______。 ', 'd', '串行传输      ', '并行传输     ', 'DMA式传输     ', '猝发式传输 ', 1);
INSERT INTO `course` VALUES (50, ' 中断向量地址是______。 ', 'b', '子程序入口地址             ', '中断服务子程序入口地址 ', '中断服务子程序出口地址     ', '中断返回地址 ', 1);
INSERT INTO `course` VALUES (51, ' CD-ROM是______型光盘。 ', 'c', '一次  ', '重写         ', '只读         ', NULL, 1);
INSERT INTO `course` VALUES (52, ' 某计算机字长是16位，它的存储容量是1MB，按字编址，它的寻址X围是______。 ', 'a', '512K   ', '1M   ', '512KB  ', NULL, 1);
INSERT INTO `course` VALUES (53, '一个16K×32位的存储器，其地址线和数据线的总和是______。 ', 'b', '48       ', '46      ', '36     ', '40 ', 1);
INSERT INTO `course` VALUES (54, ' 我国在______ 年研制成功了第一台电子数字计算机，第一台晶体管数字计算机于______ 年完成。 ', 'd', '1946   1958   ', '1950   1968   ', '1958   1961   ', '1959   1965', 1);
INSERT INTO `course` VALUES (55, ' Pentium微型计算机中乘除法部件位于______ 中。', 'a', 'CPU     ', '接口     ', '控制器     ', '专用芯片', 1);
INSERT INTO `course` VALUES (56, ' 没有外存储器的计算机初始引导程序可以放在______ 。', 'b', 'RAM     ', 'ROM     ', 'RAM和ROM     ', 'CPU', 1);
INSERT INTO `course` VALUES (57, ' 下列数中最小的数是______ 。 ', 'a', '（101001）2    ', '（52）8    ', '（2B）16    ', '（44）10', 1);
INSERT INTO `course` VALUES (58, ' 在机器数______ 中，零的表示形式是唯一的。', 'b', '原码     ', '补码     ', '移码     ', '反码', 1);
INSERT INTO `course` VALUES (59, ' 在定点二进制运算器中，减法运算一般通过______ 来实现。', 'd', '原码运算的二进制减法器       ', '补码运算的二进制减法器', '补码运算的十进制加法器        ', '补码运算的二进制加法器', 1);
INSERT INTO `course` VALUES (60, ' 下列有关运算器的描述中______ 是正确的。', 'd', '只作算术运算，不作逻辑运算     ', '只作加法', '能暂时存放运算结果             ', '以上答案都不对', 1);
INSERT INTO `course` VALUES (62, ' 相联存储器是按______ 进行寻址的存储器。 ', 'c', '地址指定方式              ', '堆栈存取方式    ', '内容指定方式              D。地址指定与堆栈存取方式结合', NULL, 1);
INSERT INTO `course` VALUES (63, ' 指令系统中采用不同寻址方式的目的主要是______ 。', 'b', '实现存储程序和程序控制    ', '缩短指令长度，扩大寻址空间，提高编程灵活性', '可以直接访问外存          ', '提供扩展操作码的可能并降低指令译码难度', 1);
INSERT INTO `course` VALUES (64, ' 堆栈寻址方式中，设A为累加寄存器，SP为堆栈指示器，Msp为SP指示器的栈顶单元，如果操作的动作是：（a）→Msp，（SP）－1→SP，那么出栈操作的动作为：', 'b', '（Msp）→A，（SP）+1→SP   ', '（SP）+1→SP，（Msp）→A', '（SP）－1→SP，（Msp）→A      ', '（Msp）→A，（SP）－1→SP', 1);
INSERT INTO `course` VALUES (65, ' 在CPU中跟踪指令后继地址的寄存器是______ 。 ', 'b', '主存地址寄存器    ', '程序计数器    ', '指令寄存器    ', '状态条件寄存器', 1);
INSERT INTO `course` VALUES (66, ' 描述多媒体CPU基本概念中正确表述的句子是______ 。', 'a', '多媒体CPU是带有MMX技术的处理器      ', '多媒体CPU是非流水线结构', 'MMX指令集是一种单指令流单数据流的串行处理指令', '多媒体CPU一定是 CISC机器', 1);
INSERT INTO `course` VALUES (67, ' 描述Futurebus+总线中基本概念正确的表述是______ 。', 'c', 'Futurebus+总线是一个高性能的同步总线标准', '基本上是一个同步数据定时协议', '它是一个与结构、处理器技术有关的开发标准', '数据线的规模不能动态可变', 1);
INSERT INTO `course` VALUES (68, ' 在______ 的微型计算机系统中，外设可以和主存储器单元统一编址，因此可以不用I/O指令。 ', 'a', '单总线     ', '双总线     ', '三总线     ', '多总线', 1);
INSERT INTO `course` VALUES (69, ' 用于笔记本电脑的大容量存储器是______ 。', 'c', '软磁盘     ', '硬磁盘     ', '固态盘     ', '磁带', 1);
INSERT INTO `course` VALUES (70, ' 具有自同步能力的记录方式______  ', 'c', 'NRZ0     ', 'NRZ1     ', 'PM     ', 'MFM', 1);
INSERT INTO `course` VALUES (71, ' ______不是发生中断请求的条件。 ', 'a', '一条指令执行结束     ', '一次I/O操作结', '机器内部发生故障     ', '一次DMA操作结束', 1);
INSERT INTO `course` VALUES (72, ' 采用DMA 方式传送数据时，每传送一个数据就要用一个______ 。', 'c', '指令周期     ', '数据周期     ', '存储周期     ', '总线周期', 1);
INSERT INTO `course` VALUES (73, ' 并行I/O标准接口SCSI中，一块主适配器可以连接______ 台具有SCSI接口的设备。', 'b', '6', '7～15     ', '8', '10', 1);
INSERT INTO `course` VALUES (74, '将有关数据加以分类、统计、分析，以取得有利用价值的信息，我们称其为______。', 'c', ' 数值计算      ', ' 辅助设计      ', ' 数据处理      ', ' 实时控制', 1);
INSERT INTO `course` VALUES (75, '目前的计算机，从原理上讲______。', 'c', '指令以二进制形式存放，数据以十进制形式存放', '指令以十进制形式存放，数据以二进制形式存放', '指令和数据都以二进制形式存放', '指令和数据都以十进制形式存放', 1);
INSERT INTO `course` VALUES (76, '根据国标规定，每个汉字在计算机内占用______存储。', 'b', '一个字节      ', '二个字节      ', '三个字节      ', '四个字节', 1);
INSERT INTO `course` VALUES (77, '下列数中最小的数为______。', 'a', '（101001）2 ', '（52）8', '（2B）16 ', '（44）10', 1);
INSERT INTO `course` VALUES (78, '存储器是计算机系统的记忆设备，主要用于______。', 'd', '存放程序      ', '存放软件     ', '存放微程序   ', '存放程序和数据', 1);
INSERT INTO `course` VALUES (80, '  下列数中最大的数是______。', 'b', '（10010101）2', '（227）8', '（96）16  ', '（143）10', 1);
INSERT INTO `course` VALUES (81, '计算机问世至今，新型机器不断推陈出新，不管怎样更新，依然保有“存储程序”的概念，最早提出这种概念的是______。', 'b', '巴贝奇         ', '贝尔', ' 诺依曼  ', '帕斯卡      ', 1);
INSERT INTO `course` VALUES (82, '在CPU中，跟踪后继指令地指的寄存器是______。', 'b', '指令寄存器     ', '程序计数器   ', '地址寄存器  ', '状态条件寄存器', 1);
INSERT INTO `course` VALUES (83, ' Pentium-3是一种______。', 'a', '64位处理器      ', '16位处理器   ', '准16位处理器  ', '32位处理器', 1);
INSERT INTO `course` VALUES (84, ' 三种集中式总线控制中，______方式对电路故障最敏感。', 'a', '链式查询        ', '计数器定时查询        ', '独立请求 ', NULL, 1);
INSERT INTO `course` VALUES (85, ' 外存储器与内存储器相比，外存储器______。', 'b', '速度快，容量大，成本高     ', '速度慢，容量大，成本低', '速度快，容量小，成本高             ', '速度慢，容量大，成本高', 1);
INSERT INTO `course` VALUES (86, ' 一个256K×8的存储器，其地址线和数据线总和为______。', 'c', '16', '18', '26', '20', 1);
INSERT INTO `course` VALUES (87, ' 堆栈寻址方式中，设A为累加器，SP为堆栈指示器，MSP为SP指示的栈顶单元。如果进栈操作的动作顺序是（A）→MSP，(SP)-1→SP。那么出栈操作的动作顺序应为______。 ', 'b', '(MSP)→A，(SP)+1→SP', '(SP)+1→SP，(MSP)→A', '(SP-1)→SP，(MSP)→A', '(MSP)→A， （SP）-1→SP', 1);
INSERT INTO `course` VALUES (88, ' 当采用______对设备进行编址情况下，不需要专门的I/O指令组。', 'a', '统一编址法      ', '单独编址法    ', '两者都是      ', '两者都不是', 1);
INSERT INTO `course` VALUES (89, ' 下面有关“中断”的叙述，______是不正确的。', 'a', '一旦有中断请求出现，CPU立即停止当前指令的执行，转而去受理中断请求', 'CPU响应中断时暂停运行当前程序，自动转移到中断服务程序', '中断方式一般适用于随机出现的服务', '为了保证中断服务程序执行完毕以后，能正确返回到被中断的断点继续执行程序，必须进行现场保存操作', 1);
INSERT INTO `course` VALUES (90, '下面叙述中，______是正确的。', 'b', '总线一定要和接口相连   ', '接口一定要和总线相连', '通道可以替代接口    ', '总线始终由CPU控制和管理', 1);
INSERT INTO `course` VALUES (91, '在下述指令中，I为间接寻址，______指令包含的CPU周期数最多。', 'c', 'CLA      ', 'ADD 30        ', 'STA I 31          ', 'JMP 21', 1);
INSERT INTO `course` VALUES (92, '设寄存器位数为8位，机器数采用补码形式（含一位符号位）。对应于十进制数-27，寄存器内为______。', 'c', '27H            ', '9BH              ', 'E5H               ', '5AH', 1);
INSERT INTO `course` VALUES (93, '某存储器芯片的存储容量为8K×12位，则它的地址线为____。', 'c', '11', '12', '13', '14', 1);
INSERT INTO `course` VALUES (94, '若十进制数为37.25，则相应的二进制数是（  ）。', 'd', '10011001', '11010101', '1001011', '10010101', 1);
INSERT INTO `course` VALUES (95, '若[x]反=11011，则x=', 'b', '-101', '-100', '1011', '-1011', 1);
INSERT INTO `course` VALUES (96, '某机器字长16位，含一位数符，用补码表示，则定点小数所能表示的最小正数是', 'a', '44972', '216', '44958', '2001-02-15', 1);
INSERT INTO `course` VALUES (97, '若采用双符号位补码运算，运算结果的符号位为10，则（）。', 'a', '产生了负溢出（下溢)', '产生了正溢出（上溢）            ', '运算结果正确，为负数       ', '运算结果正确，为正数', 1);
INSERT INTO `course` VALUES (98, '在用比较法进行补码一位乘法时，若相邻两位乘数yiyi+1为01时，完成的操作是（  )', 'b', '无                 ', '原部分积+[X]补 ，右移一位 ', '原部分积+[-X]补 ，右移一位 ', '原部分积+[Y]补 ，右移一位', 1);
INSERT INTO `course` VALUES (99, '堆栈指针SP的内容是（  ）。', 'a', '栈顶地址    ', '栈底地址  ', '栈顶内容 ', '栈底内容', 1);
INSERT INTO `course` VALUES (101, '以下关于网络按照覆盖范围进行分类的描述中，错误的是（）。', 'b', '按覆盖的地理范围，计算机网络可以分为局域网,城域网和广域网', '局域网用于将有限的地理范围内的各种计算机通过IP协议互联起来', '城域网要满足几十公里范围内的大量企业,机关,公司的多个局域网互联的需求', '广域网覆盖的地理范围从几十公里到几千公里', 2);
INSERT INTO `course` VALUES (102, '以下关于网络拓扑概念的描述中，错误的是（）。', 'd', '拓扑学是研究将实体抽象成的“点”，“线”，“面”之间的关系', '计算机网络拓扑反应出网中结点与通信线路之间的关系', '拓扑实际对网络性能，系统可靠性与通信费用有重大影响', '计算机网络拓扑是指资源子网与通信子网的拓扑构型', 2);
INSERT INTO `course` VALUES (103, '以下关于网络体系结构的描述中，错误的是（）。', 'a', '网络体系结构是网络协议的集合', '网络各层之间是相对独立', '高层只需要知道底层能提供的服务，而不需要知道底层的服务如何实现', '每层的功能与所提供的服务都已有精确的说明，因此这有利于促进协议的标准化', 2);
INSERT INTO `course` VALUES (104, '以下关于OSI参考模型的描述中，错误的是（）。', 'b', '物理层利用传输介质实现比特流的传输', '数据链路层使得物理线路传输无差错', '网络层实现路由选择，分组转发，流量与拥塞控制等功能', '传输层提供可靠的“端—端”通信服务', 2);
INSERT INTO `course` VALUES (105, '以下关于TCP/IP协议特点的描述中，错误的是（）。', 'c', '独立于特定的计算机硬件与操作系统', '独立于特定的网络硬件，适用于网络的互联', '同意采取由ISP动态分配网络地址方法', '标准化的网络应用层协议，可提供多种可靠的网络服务', 2);
INSERT INTO `course` VALUES (106, '分组交换技术的3个重要概念是：分组，存储转发与（）。', 'a', '路由选择', '分组交付', '网络安全技术', '网络交换', 2);
INSERT INTO `course` VALUES (107, '网络协议的语法规定了用户数据与控制信息的结构与（）。', 'a', '格式', '原语', '模型', '过程', 2);
INSERT INTO `course` VALUES (108, '网络协议的语义规定了需要发出何种控制信息，以及完成的动作与（）。', 'b', '语法', '响应', '层次', '服务', 2);
INSERT INTO `course` VALUES (109, '网络层次结构与各层协议的集合称为（）。', 'd', '网络拓扑结构', '网络协议结构', '网络通信结构', '网络体系结构', 2);
INSERT INTO `course` VALUES (110, 'OSI参考模型定义了开放系统的层次结构，层次之间的相互关系及各层所包括的可能的）。', 'c', '协议', '通信模型', '服务', '接口', 2);
INSERT INTO `course` VALUES (111, '以下哪个不属于OSI参考模型结构定义的层次结构术语（）。', 'b', '物理层', '主机—网络层', '会话层', '应用层', 2);
INSERT INTO `course` VALUES (112, '以下哪个术语不属于TCP/IP协议体系结构中的层次名称（）。', 'd', '应用层', '传输层', '互联网络层', '数据链路层', 2);
INSERT INTO `course` VALUES (113, '以下关于广域网的主要特征的描述中，错误的是（）。', 'c', '广域网是一种公共数据网络', '广域网一般由电信运营商负责组建,运营与维护', '广域网已经成为接入网重要的组成部分', '广域网研究的重点是宽带核心交换技术', 2);
INSERT INTO `course` VALUES (114, '10GbpsEthernet的覆盖范围能够从局域网,城域网到（）。', 'b', '对等网络', '广域网', '宽带综合业务数字网', '覆盖网', 2);
INSERT INTO `course` VALUES (115, '将网络划分为广域网（WaN）,城域网（MaN）和局域网（LaN）主要是依据()。', 'd', '接入计算机所使用的操作系统', '接入的计算机类型', '网络拓扑结构', '网络覆盖的地域范围', 2);
INSERT INTO `course` VALUES (116, '在开放系统互连参考模型（OSI）中，()以帧的形式传输数据流。', 'd', '网路层 ', '会话层 ', '传输层', '数据链路层', 2);
INSERT INTO `course` VALUES (117, '下面关于OSI参考模型的说法正确的是()。', 'd', '传输层的数据称为帧（Frame）', '网络层的数据称为段（Segment）', '数据链路层的数据称为数据包（Packet）', '物理层的数据称为比特（Bit）', 2);
INSERT INTO `course` VALUES (118, 'OSI参考模型物理层的主要功能是()。', 'c', '物理地址定义', '建立端到端连接', '在终端设备间传送比特流，定义了电压,接口,电缆标准和传输距离等', '将数据从某一端主机传送到另一端主机', 2);
INSERT INTO `course` VALUES (119, '下列选项中，不属于网络体系结构中所描述的内容是（）。', 'c', '网络的层次', '每一层使用的协议', '协议的内部实现细节', '每一层必须完成的功能', 2);
INSERT INTO `course` VALUES (120, '根据计算机网络的覆盖范围，可以把网络划分为三大类，以下不属于其中的是（ ）', 'd', '广域网', '城域网', '局域网', '宽带网', 2);
INSERT INTO `course` VALUES (121, '在OSI参考模型中，负责使分组以适当的路径通过通信子网的是（ ）。', 'c', '表示层 ', '传输层 ', '网络层 ', '数据链路层', 2);
INSERT INTO `course` VALUES (122, '一幢大楼中的几十台计算机要实现联网，可将它们组成一个（  ）。', 'b', '广域网   ', '局域网  ', '城域网  ', '通信子网', 2);
INSERT INTO `course` VALUES (123, 'Internet的中文含义是（ ）。', 'a', '因特网     ', '万维网    ', '广域网    ', '互联网', 2);
INSERT INTO `course` VALUES (124, '在OSI模型中，服务定义为（  ）。', 'c', '各层向下层提供的一组原语操作', '各层间对等实体间通信盼功能实现', '各层通过其SaP向上层提供的一组功能', '与协议的含义相同', 2);
INSERT INTO `course` VALUES (125, 'OSI参考模型中，网络层,数据链路层,物理层传输的数据单位分别是（）。', 'c', '报文,帧,比特', '分组,报文,比特', '分组,帧,比特', '数据报,帧,比特', 2);
INSERT INTO `course` VALUES (126, '构造计算机网络的目的是（）。', 'd', '信息交流', '数据交换', '通信', '资源共享', 2);
INSERT INTO `course` VALUES (127, '速率的单位是（）。', 'a', 'bps', 'byte/s', 'Hz', '安培', 2);
INSERT INTO `course` VALUES (128, '以下关于网络体系结构“层次”概念的描述中，错误的是（）。', 'd', '网络中通信对等实体具有相同的层次', '不同系统的同等层具有相同的功能', '高层使用低层提供的服务', '高层需要制定底层服务的具体方法', 2);
INSERT INTO `course` VALUES (129, '以下关于物理层服务功能的描述中，错误的是（）。', 'd', '物理层向数据链路层提供比特流传输服务', '物理层服务的主要功能是：物理连接的建立,维护与释放,比特流的传输', '设置物理层就是要屏蔽传输介质,设备与通信技术的差异性', '物理层比特流传输的可靠性主要是物理层本身来解决', 2);
INSERT INTO `course` VALUES (130, '以下关于传输介质的类型和特点的描述中，错误的是（）。', 'd', '常用的传输介质有双绞线,同轴电缆,光纤电缆,无线与卫星通信信道', '双绞线分为屏蔽双绞线与非屏蔽双绞线', '光纤分为单模光纤和多模光纤', '在设计中采用的典型的卫星通信延迟时间值270ms', 2);
INSERT INTO `course` VALUES (131, '以下关于波特率的描述中，错误的是（）。', 'd', '调制速率与波特率描述模拟线路上使用调制解调的传输速率', '调制速率指每秒钟载波调制状态改变的数值，单位是bit/s', '数据传输速率S与调制速率B之间的关系可以表示为S=B*log2k', '调制速率为1200baud，多想调制的相速k=8，那么数据传输速率为9600kbps', 2);
INSERT INTO `course` VALUES (132, '以下关于多路复用基本概念的描述中，错误的是（）。', 'c', '时分多路复用通过为多个信道分配互不重叠的时间片来达到多路复用的目的', '频分多路复用通过设置多个频率互不重叠的信道来达到同时传输多路信号的目的', '波分多路复用通过光振幅调制达到多路服用的目的', '码分多址是在同一个频段的不同信道采用特殊挑选的的码型达到互不产生干扰的目的', 2);
INSERT INTO `course` VALUES (133, '以下关于同步时分多路复用的描述中，错误的是（）。', 'd', '时分多路复用可以分为：同步时分多路复用与统计时分多路复用', '同步时分多路复用将时间片固定分配给多个信道', '统计时分多路复用允许动态的分配时间片', '时分多路复用中传输的“帧”就是数据链路层的“帧”', 2);
INSERT INTO `course` VALUES (134, '以下关于双绞线特性的描述中，错误的是（）。', 'd', '双绞线的一对线作为一条通信线路，线对螺旋排列是为了使各线对间的电磁干扰最小', '双绞线分为：屏蔽双绞线和非屏蔽双绞线', '按照传输特性，双绞线可以分为五类，常用的是三类线与五类线', '三类线带宽为100MHz，适用于语音与100Mbps的高速数据传输', 2);
INSERT INTO `course` VALUES (135, '以下关于卫星通信技术特性的描述中，错误的是（）。', 'b', '无线通信主要包括微波通信,蜂窝移动通信和卫星移动通信', '卫星通信的上行链路与下行链路使用的频率是相同的', '蜂窝无线通信必须依赖基站等基础设施', '微波型号只能进行视距传播，主要用于地面点—点通信', 2);
INSERT INTO `course` VALUES (136, '以下关于曼切斯特编码特点的描述中，错误的是（）。', 'c', '每比特的周期T分为前T/2与后T/2两部分', '前T/2传送该比特的反码，后T/2传送该比特的源码', '两次平跳变的时间间隔可以是T/2，利用电平跳变可以产生同步信号', '曼切斯特编码信号是一种自含时钟编码', 2);
INSERT INTO `course` VALUES (137, '以下关于带宽与速率概念的描述中，错误的是（）。', 'b', '奈奎斯特准则与香农定理描述了“带宽”与“速率”的关系', '奈奎斯特准则指出以时间间隔2π/ω通过信道，前后码元不产生串扰', '香农定国给出了有随机热噪声的信道中传输速率与信道带宽,信噪比的关系', '新到的最大速率与带宽之间存在着明确的关系，可以用“带宽”表示“速率”', 2);
INSERT INTO `course` VALUES (138, '两个网段在物理层进行互连时要求（）。', 'c', '数据传输率和数据链路层协议都相同', '数据传输率和数据链路层协议可都不相同', '数据传输率相同，数据链路层协议可不相同', '数据传输率可不相同，数据链路层协议都相同', 2);
INSERT INTO `course` VALUES (139, '下列选项中不是光纤的优点的是（  ）。', 'd', '3 S\" a) D( V0 f+ i$ l% N  w$ o7 Paa.    频带宽', '传输远', '保密性好', '安装容易', 2);
INSERT INTO `course` VALUES (140, '用双绞线传输数据时，一条双绞线的距离通常是（）米。', 'a', '100', '125', '250', '350', 2);
INSERT INTO `course` VALUES (141, '在常用的传输介质中，带宽最宽，信号传输衰减最小，抗干扰能力最强的是（）。', 'a', '光缆 ', '双绞线', '同轴电缆 ', '无线信道', 2);
INSERT INTO `course` VALUES (142, '通常通信信道的带宽越大，在数据传输中的失真将会（）。', 'a', '越大  ', '越小  ', '不变  ', '严重', 2);
INSERT INTO `course` VALUES (143, '关于aSDL说法不正确的是（）。', 'd', '含义是非对称数字用户回路', '使用电话线为传输介质，提供高达8Mbps下载和1Mbps上传速率', '传输速率可达5Km', '上网时占用电话信号', 2);
INSERT INTO `course` VALUES (144, '光缆中反射层的作用是()。', 'a', '光线通过光缆时反射光线  ', '放大光信号', '促进光线的传播    ', '减小反射角', 2);
INSERT INTO `course` VALUES (145, '物理层上不会发生什么?()。', 'c', '比特流的传输  ', '双向的通信', '重新路由的信息  ', '完成传输方式的转换', 2);
INSERT INTO `course` VALUES (146, '光缆的传输距离最远，其典型的传输速率可达100Mbps,并且具有()的特点。', 'd', '安装容易，对电磁干扰不敏感 ', '安装困难，对电磁干扰不敏感', '安装容易，对电磁干扰敏感', '安装困难，对电磁干扰敏感', 2);
INSERT INTO `course` VALUES (147, '采用100BaSE—T物理层媒体规范，其数据速率及每段长度分别为（）。', 'b', '100Mbps，200m  ', '100Mbps，100m', '200Mbps，200m ', '200Mbps，100m', 2);
INSERT INTO `course` VALUES (148, '双绞线由两根互相绝缘绞合成螺纹状的导线组成。下面关于双绞线的叙述中，不正确的是（）', 'c', '它既可以传输模拟信号，也可以传输数字信号', '安装方便，价格便宜', '不易受外部干扰，误码率低', '通常只用作建筑物内的局部网通信介质评', 2);
INSERT INTO `course` VALUES (149, '在下列多路复用技术中，（）具有动态分配时隙的功能。', 'd', '同步时分多路复用', '统计时分多路复用', '频分多路复用', '波分多路复用', 2);
INSERT INTO `course` VALUES (150, '下列有关物理传输介质描述不正确的是（）。', 'd', '物理传输介质一般分为有线传输介质和无线传输介质。', '有线传输介质一般包括：双绞线,同轴电缆，光纤等。', '无线传输介质一般包括：微波,红外线，激光等。', '双绞线只有STP一种类型。', 2);
INSERT INTO `course` VALUES (151, '有关多路复用技术描述不正确的有（）。', 'c', 'FDM的前提是传输介质的可用带宽要大于多路给定信号所需带宽的总和。', 'TDM可分为同步TDM和异步TDM。', '异步TDM又称为统计码分多路复用技术。', '对于模拟信号，可以将TDM和FDM组合起来使用。', 2);
INSERT INTO `course` VALUES (152, '两台计算机之间利用电话线路传送数据信号时，必需的设备是（）。', 'b', '网卡  ', '调制解调器  ', '中继器  ', '同轴电缆', 2);
INSERT INTO `course` VALUES (153, '个人计算机以拨号方式连入网络不所需的硬件设备是（）。', 'b', '一台计算机  ', '路由器  ', '调制解调器  ', '电话线路', 2);
INSERT INTO `course` VALUES (154, '在下列多路复用技术中，（）具有动态分配时隙的功能。', 'b', '同步时分多路复用', '统计时分多路复用', '频分多路复用', '波分多路复用', 2);
INSERT INTO `course` VALUES (155, '10Base_TEthernet局域网中，下列说法不正确的是（）。', 'c', '10指的是传输速率为10Mb/s', 'Base指的是基带传输', 'T指的是以太网', '10Base_T是Ethernet局域网的一种配置', 2);
INSERT INTO `course` VALUES (156, '以下关于数据链路层功能描述中，错误的是（）。', 'b', '数据链路层的建立,维持和释放称为链路管理', '帧同步作用是保证收发双方时钟同步', '“0比特插入/删除”的作用是保证帧传输的透明性', '差错控制要使接收方能够发现传输错误，并通过冲传来纠正错误', 2);
INSERT INTO `course` VALUES (157, '以下关于数据链路层与网络层关系描述中，错误的是（）。', 'd', '数据链路层是OSI参考模型的第2层', '数据链路层是有差错的物理线路变为无差错的数据线路', '数据链路层必须实现链路管理,帧传输,流量控制,差错控制等功能', '数据链路层向网络层屏蔽了帧结构的差异性', 2);
INSERT INTO `course` VALUES (158, '以下关于误码率概念描述中，错误的是（）。', 'c', '误码率是指二进制比特在数据传输系统中被传错的概率', '它在数值上近似等于被传错的比特数与传输的二进制比特总数之比', '误码率是衡量数据传输系统异常工作状态下传输可靠性的参数', '只有被测量的额传输二进制位数越大，才会越接近真正的误码率值', 2);
INSERT INTO `course` VALUES (159, '以下关于循环沉余码特点的描述中，错误的是（）。', 'b', 'CRC检错方法使用了双方预先约定的生成多项式G（x）', '生成多项式G（x）可以随机生成', 'CRC校验码采用二进制的异或操作', 'CRC校验码能够检查出离散错与突发错', 2);
INSERT INTO `course` VALUES (160, '以下关于PPP信息帧格式的描述中，错误的是（）。', 'c', '信息帧的数据字段的长度可变，它包含着要传送的数据', '信息帧头包括：标识字段,地址字段,控制字段与协议字段', '地址字段长度值为接受结点的地址', '协议字段值为0021H表示网络层使用IP协议', 2);
INSERT INTO `course` VALUES (161, '以下关于IEEE802参考模型的描述中，错误的是（）。', 'd', 'MaC方法是指控制多个结点利用公共传输介质发送和接收数据的方法', '常用的MaC方法主要有：令牌环,令牌总线与CSMa/CD', '802参考模型将对应OSI参考模型中的数据链路层分为：LLC子层与MaC子层', '802.1标准定义了局域网的各种物理层标准', 2);
INSERT INTO `course` VALUES (162, '以下关于Ethernet工作原理的描述中，错误的是（）。', 'c', 'CSMa/CD发送流程可以概括为：先听后发，边听边发，冲突停止，延迟重发', 'Ethernet冲突检测方法是通过比较法或编码违例判决法来实现', 'Ethernet协议标准中规定的冲突窗口长度为51.2ms', 'CMSa/CD方法是一种随机争用型介质访问控制方法', 2);
INSERT INTO `course` VALUES (163, '以下关于Ethernet帧结构的描述中，错误的是（）。', 'b', 'Ethernet帧结构包括：前导码与帧前定界符,地址,类型,数据与帧校验等字段', 'Ethernet的MaC地址长度为32bit', '类型字段值等于0x0800表示网络层使用IP协议', 'Ethernet帧的最小长度为64B，最大长度为1518B', 2);
INSERT INTO `course` VALUES (164, '以下关于快速以太网的描述中，错误的是（）。', 'b', '快速以太网传输速率为100Mbps', '快速以太网保留着10Mbps以太网的最小帧长度，而不需要限制最大帧长度', '100BaSE_T标准定义的MII将MaC子层与物理层分开', '快速以太网允许在一个局域网中支持10Mbps与100Mbps速率的网卡共存', 2);
INSERT INTO `course` VALUES (165, '以下关于千兆以太网的描述中，错误的是（）。', 'd', '千兆以太网的标准是IEEE802.3z', '802.3z的物理层标准1000BaSE_T定义了千兆介质接口（GMII）', '千兆以太网与传统的10Mbps以太网有相同的帧格式,最小与最大帧长度', '1000BaSE_SX标准允许光纤长度最大为3000m', 2);
INSERT INTO `course` VALUES (166, '以下关于十千兆以太网的描述中，错误的是（）。', 'c', '10GE的帧格式与10Mbps,100Mbps和1Gbps以太网的帧格式基本相同', '10GE仍保留着802.3标准对以太网最小帧长度和最大帧长度的规定', '10GE的传输介质可以使用铜制的双绞线或光纤', '10GE只工作在全双工方式', 2);
INSERT INTO `course` VALUES (167, '以下关于局域网交换机基本工作原理的描述中，错误的是（）。', 'd', '局域网交换机可以在他的多个端口之间建立多个并发连接', '交换机的交换方式有直接交换方式,存储转发交换方式与改进的直接交换方式', '衡量局域网交换机性能的参数主要是最大转发速率,汇集转发速率与转发等待时间', '汇集转发速率是指两个端口之间每秒钟最多能转发的帧数量', 2);
INSERT INTO `course` VALUES (168, '以下关于VLaN概念的描述中，错误的是（）。', 'a', 'VLaN是一种新型的局域网', '建立VLaN需要使用交换机', 'VLaN以软件方式实现逻辑工作组的划分与管理', '逻辑工作组中的结点组成不受物理位置的限制', 2);
INSERT INTO `course` VALUES (169, '以下关于集线器的描述中，错误的是（）。', 'c', '集线器作为中心连接设备通过非屏吧蔽双绞线与结点', '集线器在MaC层采用CSMa/CD介质访问控制方法', '连接在一个集线器上的主机可以不属于一个“冲突域”', '普通的集线器提供两种类型的端口：RJ_45端口与向上连接端口', 2);
INSERT INTO `course` VALUES (170, '以下关于网桥描述中，错误的是（）。', 'a', '网桥能够互联采用不同的网络层与数据链路层协议的局域网', '网桥能够互联不同的传输介质与不同的传输速率的网络', '网桥以接收,存储,地址过滤与转发的方式实现互联网络之间的通信', '网桥可以分隔两个网络之间的广播通信量', 2);
INSERT INTO `course` VALUES (171, '以下关于网桥基本分类的描述中，错误的是（）。', 'b', '网桥最重要的工作是构建和维护路由表', '路由表中记录了不同结点的IP地址与网桥转发端口关系', '透明网桥由各个网桥来决定路由选择', '源路由网桥由发送帧的源结点并负责选择路由', 2);
INSERT INTO `course` VALUES (172, '以下关于源路由网桥的描述中，错误的是（）。', 'c', 'IEEE802.5制定了源路由网桥标准', '为了发现合适的路由，源结点以广播方式向目的结点发送用于探测的发现帧', '如果有多条路径，源结点将选择经过中间路由器最少的路径', '源路由网桥在发送帧头部写入路由信息', 2);
INSERT INTO `course` VALUES (173, '以下关于PPP信息帧的描述中，错误的是（）。', 'a', '标志字段值为0x6E', '地址字段值为0XFF', '控制字段值为03', '协议字段对于IP协议值为0021H', 2);
INSERT INTO `course` VALUES (174, '以下关于Ethernet物理地址的描述中，错误的是（）。', 'b', 'Ethernet物理地址长度为48位', '可分配的Ethernet物理地址应该有248个', 'IEEE注册管理委员会为每个网卡生产商分配Ethernet物理地址的前3个字节', '标准的Ethernet网卡的物理地址写法如00_60_08_00_a6_38', 2);
INSERT INTO `course` VALUES (175, '在数据帧中，当所传的数据中出现了控制字符时，就必须采取适当的措施，使接收方不至于将数据误认为是控制信息。这样才能保证数据链路层的传输是（）的。', 'a', '透明', '面向连接', '冗余', '无连接', 2);
INSERT INTO `course` VALUES (176, '对于基带CSMa/CD而言，为了确保发送站点在传输时能检测到可能存在的冲突，数据帧的传输时延至少要等于信号传播时延的()。', 'b', '1倍', '2倍', '4倍', '2.5倍', 2);
INSERT INTO `course` VALUES (177, '下面（）连接设备工作在OSI参考模型的传输层或传输层之上。', 'd', '网桥', '网桥路由器', '路由器', '网关', 2);
INSERT INTO `course` VALUES (178, '数据链路层的三个基本问题不包括（）。', 'd', '封装成帧', '透明传输', '差错控制', '碰撞问题', 2);
INSERT INTO `course` VALUES (179, 'PPP是Internet中使用的（）协议。', 'd', '报文控制', '分组控制', '高级数据链路控制', '点到点', 2);
INSERT INTO `course` VALUES (180, '以下关于IP协议特点的描述中，错误的是（）。', 'b', 'IP协议提供的是一种“尽力而为”的服务', '无连接不意味着IP协议不维护IP分组发送后的任何状态信息', '不可靠意味着IP协议不能保证每个IP分组都能够正确的到达目的结点', 'IP协议是点到点的网络层通信协议', 2);
INSERT INTO `course` VALUES (181, '以下关于IP分组分片基本方法的描述中，错误的是（）。', 'b', 'IP分组长度大于MTU时，就必须对IP分组进行分片', 'DF=1，分组的长度又超过MTU，则丢弃该分组，不需要向源主机报告', '分片MF值为1表示接收的分片不是最后一个分片', '片偏移值是以8字节为单位来计数的', 2);
INSERT INTO `course` VALUES (182, '以下关于IP分组报头中TTL字段的描述中，错误的是（）。', 'b', 'TTL用转发分组最多的路由器跳数来确定分组寿命', '生存时间TTL的初始值由源路由器设置，经过一个路由器，它的值就减去1', '当生存时间TTL的值为0时丢弃该分组', '丢弃分组的路由器向源主机发送ICMP报文通知', 2);
INSERT INTO `course` VALUES (183, '以下关于IP地址的描述中，错误的是（）。', 'd', '连接到互联网的每一台主机或路由器都有一个IP地址', '原则上互联网上的任何两台主机与路由器不会有相同的IP地址', '如果一台主机通过多个网卡分别连接到多个网络，必须为每个接口分配一个IP地址', '如果一条线路互联两台路由器，一条线路的两个端口可以共用一个IP地址', 2);
INSERT INTO `course` VALUES (184, '下列哪个IP地址是有效的？（）', 'd', '202.260.120.46', '220.192.33.265', '192.258.133.45', '130.192.33.45', 2);
INSERT INTO `course` VALUES (185, '当一个IP分组进行直接交付时，要求发送站和目的站具有相同的（）。', 'b', 'IP地址', '子网地址', '网络号', '主机号', 2);
INSERT INTO `course` VALUES (186, '以下关于自治系统（aS）的描述中，错误的是（）。', 'd', 'Internet之大使得仅用一种路由选择协议已无法更新所有的路由表，因此Internet必须划分为多个自治系统', '自治系统是在一个管理机构管辖之下的一组网络与路由器', '每一个自治系统可以选择一种内部路由选择协议来处理自治系统内部的路由选择', '自治系统之间可以选择一种或几种路由选择协议', 2);
INSERT INTO `course` VALUES (187, '以下关于RIP与向量距离路由选择的描述中，错误的是（）。', 'c', '内部路由选择协议RIP是基于向量距离路由选择算法的', 'RIP要求内部路由器将它关于整个aS的路由信息发布出去', 'RIP要求内部路由器向整个aS的路由器发布路由信息', 'RIP要求内部路由器按照一定的时间间隔发布路由信息', 2);
INSERT INTO `course` VALUES (188, '以下关于OSPF协议特征的描述中，错误的是（）。', 'd', 'OSPF协议将一个自治系统划分成若干个域，有一个特殊的域叫做主干区域', '域之间通过区域边界路由器互联', '在自治系统中有4类路由器，即区域内部路由器,主干路由器,区域边界路由器与aS边界路由器', '主干路由器不能兼作区域边界路由器', 2);
INSERT INTO `course` VALUES (189, '以下关于OSPF协议与链路状态路由选择算法的描述中，错误的是（）。', 'd', 'OSPF使用链路状态路由选择算法来实现aS内部路由表的更新', '链路状态路由选择算法要求每一个路由器向本区域内的每一个其他路由器发送它的相邻路由器的状态信息', '收到OSPF分组的路由器向它的相邻路由器发送每一个分组的副本', '发送的间隔时间最长为30s', 2);
INSERT INTO `course` VALUES (190, '以下关于BGP协议特征的描述中，错误的是（）。', 'c', 'BGP协议是自治系统之间的路由选择协议', 'BGP协议的路由表包括分组到达目的网络必须经过的aS的有序表', 'BGP协议中“相邻”的概念与RIP,OSPF是不同的，两个不同的,互相连接的aS边界路由器是“相邻”的', 'aS边界路由器是基于管理员加在路由器上的策略', 2);
INSERT INTO `course` VALUES (191, '下列哪一项不属于路由选择协议的功能。()', 'b', '获取网络拓扑结构的信息', '发现下一跳的物理地址', '选择到达每一个目的网络的最优路径', '构建路由表', 2);
INSERT INTO `course` VALUES (192, '下面的前缀中的哪一个和地址152.7.77.159及152.31.47.252都匹配？（）', 'd', '152.40/13', '153.40/9', '152.64/12', '152.0/11', 2);
INSERT INTO `course` VALUES (193, '以下关于ICMP差错报文的描述中，错误的是（）。', 'b', '对于已经携带ICMP差错报文的分组，不再产生ICMP差错报文', '对于已经分片的分组，对于第一个分片，不产生ICMP差错报文', '对于多播的分组，不产生ICMP差错报文', '对于带有回送地址的分组，不再产生ICMP差错报文', 2);
INSERT INTO `course` VALUES (194, '以下关于ICMP查询报文中“回送请求与应答”报文的描述中，错误的是（）。', 'd', '回送请求与应答报文是为网络诊断的目的而设计的', '类型字段值为8,代码值为0表示回送请求报文', '类型字段值为0，代码值为0表示回送请求报文', '回送请求与应答报文的“标识符”字段的值是随机产生的', 2);
INSERT INTO `course` VALUES (195, '以下关于ICMP差错报告报文中“源端抑制”报文的描述中，错误的是（）。', 'c', '“源端抑制”报文为IP网络增加了一种流量控制的方法', '类型字段值为4,代码值为0表示“源端抑制”报文', '当路由器因出现拥塞而丢弃分组时，向分组的发送结点发送“源端抑制”报文', '对于每一个因拥塞而丢弃的分组，都应该发送“源端抑制”报文', 2);
INSERT INTO `course` VALUES (196, '以下选项中不属于ICMP报文的是（）。', 'a', '流量调整报文', '源站抑制报文', '回送请求/应答报文', '参数问题报文', 2);
INSERT INTO `course` VALUES (197, '以下关于子网概念的描述中，错误的是（）。', 'd', '划分子网是将网络划分成多个部分，对于外部网络仍然像一个网络一样', '三级层次的IP地址是：网络号_子网号_主机号', '同一个子网中所有的主机必须使用相同的子网号', '子网的概念只用于a类,B类IP地址', 2);
INSERT INTO `course` VALUES (198, '以下关于CIDR的描述中，错误的是（）。', 'b', '将IP地址不是按标准的地址分类规则，而是以可变大小的块方法进行分配', 'CIDR用“网络前缀”代替子网号', 'CIDR采用“<网络前缀>,<主机号>”来表示地址', 'CIDR将网络前缀相同的连续的IP地址组成一个“CIDR地址块”', 2);
INSERT INTO `course` VALUES (199, '以下关于路由器的描述中，错误的是（）。', 'c', '路由器是一种具有多个输入端口和多个输出端口,转发分组的专用计算机系统', '路由器结构由路由选择和分组转发两部分组成', '路由选择处理器根据路由表为进入的分组选择输出端口', '衡量路由器性能的重要参数是路由器每秒钟能够处理的分组数', 2);
INSERT INTO `course` VALUES (200, '以下关于aRP的描述中，错误的是（）。', 'd', '从已知的IP地址找出对应物理地址的映射过程叫做地址解析', '从已知的物理地址找出对应IP地址的映射过程叫做反向地址解析', 'aRP定义了请求分组与应答分组的格式', '请求分组与应答分组都是采用广播方式发送的', 2);
INSERT INTO `course` VALUES (201, '以下关于IPv6地址BD02:120D:0000:0000:0000：72a2:0000:00C0的表示中，错误的是（）', 'd', 'BD02:120D::0：72a2:0:00C0', 'BD02:120D:0:0:0：72a2::C0', 'BD02:120D::72a2:0:00C0', 'BD02:120D::0:72a2:0:C0', 2);
INSERT INTO `course` VALUES (202, '以下关于IPv6与IPv4报头的比较描述中，错误的是（）。', 'b', 'IPv6取消了头部长度字段是因为头部长度是定长的', 'IPv6取消了总长度字段，替代的是有效片偏移值', 'IPv6用跳步限制字段取代了IPv4的生存时间字段', 'IPv4的报头选项放到IPv6的扩展头部', 2);
INSERT INTO `course` VALUES (203, '以下关于IPv4过渡到IPv6方法的描述中，错误的是（）。', 'b', '双协议栈的方案是：一个结点同时运行IPv4与IPv6协议', '双IP协议层就是双协议栈的方案', '两台IPv6主机要通过IPv4网络传输数据时可以使用隧道技术', '隧道配置可以分为：路由器_路由器,主机_路由器或路由器_主机，及主机_主机3中类型', 2);
INSERT INTO `course` VALUES (204, '以下关于IPv6特征的描述中，错误的是（）。', 'c', 'IPv6将一些非根本性的和可选择的字段移到了固定协议头之后的拓展协议头中', 'IPv6的地址长度定为128位', '128位的子网地址空间可以满足主机到主干网之间的三级ISP的结构', 'IPv6支持IPSec协议，这就为网络安全提供了一种基于标准的解决方案', 2);
INSERT INTO `course` VALUES (205, '以下关于传输层基本概念的描述中，错误的是（）。', 'c', '网络层解决的是由“点—点”链路组成的传输路径的路由选择与分组交付问题', '传输层在源主机的应用进程与目的主机的应用进程之间建立“端—端”连接', '设计传输层的目的就是为了改善传输网络的性能', 'TPDU头用于传达传输层协议的命令和响应', 2);
INSERT INTO `course` VALUES (206, '以下关于应用进程,传输层接口与套接字的描述中，错误的是（）。', 'a', '应用进程是在应用程序开发者控制下工作的，它不依赖于主机操作系统', '传输层的TCP或UDP协议是在主机操作系统控制下工作的', '一个IP地址与一个进程标识叫做一个“套接字”或“套接字地址”', '套接字也叫做应用程序编程接口（aPI）', 2);
INSERT INTO `course` VALUES (207, '以下关于TCP与UDP协议特点的比较中，错误的是（）。', 'd', 'TCP面向连接，UDP无连接', 'TCP基于字节流，UDP基于报文', 'TCP提供可靠的报文传输，UDP提供的是尽力而为地交付', 'TCP传输速率高于UDP传输速率', 2);
INSERT INTO `course` VALUES (208, '以下关于UDP协议的主要特点的描述中，错误的是（）。', 'b', 'UDP报头主要包括端口号,长度,校验和等字段', 'UDP长度是UDP数据报的长度，包括伪报头的长度', 'UDP校验和包括：伪报头,UDP报头及应用层数据', '伪报头包括IP分组报头的一部分', 2);
INSERT INTO `course` VALUES (209, '以下关于TCP协议主要特点的描述中，错误的是（）。', 'b', '支持面向连接与并发的TCP连接', '支持字节流传输，自动确定接收端应用程序数据字节的起始与终结位置', '允许通信双方的应用程序在任何时候发送数据', '使用确认机制来检查数据是否安全和完整到达', 2);
INSERT INTO `course` VALUES (210, '以下关于TCP最大段长度的描述中，错误的是（）。', 'd', 'TCP协议对报文数据部分的最大长度有一个规定，这个值称为最大段长度MSS', 'MSS是TCP报文中数据部分的最大字节数限定值，不包括报头长度', 'MSS的默认值为536字节', 'TCP报文段的最大长度与窗口长度的概念是相同的', 2);
INSERT INTO `course` VALUES (211, '以下关于UDP报头格式的描述中，错误的是（）。', 'c', 'UDP报文报头长度固定为8字节', 'UDP报头主要有以下字段：端口号,长度,校验和', '长度字段的长度是16位，它定义了用户数据报的总长度', 'UDP校验和字段是可选项', 2);
INSERT INTO `course` VALUES (212, '以下关于校验和的描述中，错误的是（）。', 'd', 'UDP校验和用来检验用户数据报在传输中是否出错', 'UDP校验和校验的对象是伪报头,UDP报头以及应用层数据', '计算校验和时，UDP在用户数据报之前增加12字节的伪报头', 'IP分组报头的协议号为10表示传输层采用UDP', 2);
INSERT INTO `course` VALUES (213, '以下关于TCP支持字节流的传输特点的描述中，错误的是（）。', 'c', '字节流传输描述了一个无数据丢失,重复和乱序的数据传输过程', 'TCP把应用程序提交的数据看成是一连串的,无结构的字节流', '发送方为应用程序发出的每一个写操作都创建一个数据报文段', '接收端应用程序数据字节的起始与终结位置必须由应用程序自己去确定', 2);
INSERT INTO `course` VALUES (214, '以下关于TCP支持全双工服务的描述中，错误的是（）。', 'd', 'TCP允许通信双方的应用程序在任何时候发送数据', '通信的双方都设置有发送和接收缓冲区', '应用程序将要发送的数据字节提交给发送缓冲区，数据发送过程由TCP协议来控制', '接收端将接收数据存放到接收缓冲区，TCP程序在合适的时间到缓冲区中读取数据', 2);
INSERT INTO `course` VALUES (215, '以下关于TCP协议支持可靠传输服务特点的描述中，错误的是（）。', 'c', 'TCP使用确认机制来检查数据是否安全和完整地到达，并提供拥塞控制功能', 'TCP对发送和接收的数据进行跟踪,确认与重传，以保证数据能够到达接收端', 'TCP协议建立在不可靠网络层IP协议之上，只能够通过流量控制来弥补缺陷', '传输层传输的可靠性建立在网络层得基础上，同时也就会受到它们的限制', 2);
INSERT INTO `course` VALUES (216, '以下关于TCP报文格式的描述中，错误的是（）。', 'd', 'TCP报头长度为20—60字节，其中固定部分长度为20字节', '在TCP连接建立时，每一方需要使用随机数产生器产生一个初始序号ISN', '确认号字段的值为501，表示已经正确的接收了序号为500的字节', '确认号为501,窗口字段值为1000，表示下一次发送报文的最后一个字节序号为1502', 2);
INSERT INTO `course` VALUES (217, '以下关于TCP工作原理与过程的描述中，错误的是（）。', 'c', 'TCP连接建立过程需要经过“三次握手”的过程', '当TCP传输连接建立之后，客户端与服务器端的应用进程进行全双工的字节流传输', 'TCP传输连接的释放过程很复杂，只有客户端可以主动提出释放连接请求', '客户端主动提出请求的连接释放需要经过“四次握手”的过程', 2);
INSERT INTO `course` VALUES (218, '以下关于TCP窗口与拥塞控制概念的描述中，错误的是（）。', 'c', '连接建立时设置的窗口大小一定是最大报文段长度的几倍或几十倍', '发送窗口确定的依据是：发送窗口=Min【通知窗口，拥塞窗口】', '拥塞窗口是接收端根据网络拥塞情况确定的窗口值', '拥塞窗口大小在开始时可以按指数规律增长', 2);
INSERT INTO `course` VALUES (219, '在一个TCP连接的数据传输阶段，如果发送端的发送窗口值由2000变为3000，意味着发送端可以（）。', 'c', '在收到一个确认之前可以发送3000个TCP报文段', '在收到一个确认之前可以发送10000个字节', '在收到一个确认之前可以发送3000个字节', '在收到一个确认之前可以发送2000个TCP报文段', 2);
INSERT INTO `course` VALUES (220, '在TCP/IP协议簇中，应用层的各种服务是建立在传输层所提供服务的基础上实现的。下列哪组协议需要使用传输层的TCP协议建立连接。（）', 'b', 'DNS,DHCP,FTP', 'TELNET,SMTP,HTTP', 'BOOTP,FTP,TELNET', 'SMTP,FTP,TFTP', 2);
INSERT INTO `course` VALUES (221, '在TCP中，实际发送窗口的大小为（）。', 'd', 'rwnd', 'cwnd', '由发送窗口本身', 'min(rwnd，cwnd)', 2);
INSERT INTO `course` VALUES (222, 'TCP是一个面向连接的协议，同时又引入了滑动窗口协议，TCP协议采用滑动窗口协议解决了()。', 'c', '端到端的流量控制', '整个网络的拥塞控制', '端到端的流量控制和网络的拥塞控制', '整个网络的差错控制', 2);
INSERT INTO `course` VALUES (223, 'TCP/TP的传输层协议使用哪一种地址形式将数据传送给上层应用程序？（）', 'c', 'IP地址', 'MaC地址', '端口号', '套接字地址', 2);
INSERT INTO `course` VALUES (224, '关于TCP和UDP端口,下列哪种说法是正确是（）', 'a', 'TCP和UDP分别拥有自己的端口号,它们互不干扰,可以共共存于同一台主机', 'TCP和UDP分别拥有自己的端口号,但它们不能共享于同一台主机', 'TCP和UDP的端口没有本质区别，它们可以共存于同一台主机', '当一个TCP连接建立时，她们互不干扰，不能共存于同一台主机', 2);
INSERT INTO `course` VALUES (225, '在TCP/IP参考模型中，传输层的主要作用死在互联网的源主机与目的主机对等实体之间建立用于会话的（）。', 'c', '点到点连接', '操作连接', '端到端连接', '控制连接', 2);
INSERT INTO `course` VALUES (226, '为了保证连接的可靠建立，TCP通常采用（）。', 'a', '3次握手法', '窗口控制机制', '自动重发机制', '端口机制', 2);
INSERT INTO `course` VALUES (227, '在TCP/IP协议簇中，UDP协议工作在（）。', 'b', '应用层', '传输层', '网络互联层', '网络接口层', 2);
INSERT INTO `course` VALUES (228, '在TCP/IP协议簇中，应用层的各种服务是建立在传输层所提供服务的基础上实现的。下列哪组协议需要使用传输层的TCP协议建立连接。（）', 'b', 'DNS,DHCP,FTP', 'TELNET,SMTP,HTTP', 'BOOTP,FTP,TELNET', 'SMTP,FTP,TFTP', 2);
INSERT INTO `course` VALUES (229, '对于下列说法，错误的是（）。', 'd', 'TCP协议可以提供可靠的数据流传输服务', 'TCP协议可以提供面向连接的数据流传输服务', 'TCP协议可以提供全双工的数据流传输服务', 'TCP协议可以提供面向非连接的数据流传输服务', 2);
INSERT INTO `course` VALUES (230, '以下关于客户/服务器工作模式的特点的描述中，错误的是（）。', 'b', '在应用层C/S工作模式下，服务器程序与客户进程是协同工作的两个部分', '每一种服务器只能够安装一种特定的服务器程序', '安装服务器程序的主机作为服务器，为客户提供服务', '用户通过安装客户程序的主机访问网络', 2);
INSERT INTO `course` VALUES (231, '以下关于网络应用系统选择TCP协议的描述中，错误的是（）。', 'b', 'TCP协议是一种功能完善,面向连接,可靠的传输层协议', 'TCP协议的拥塞控制机制适合于实时视频应用', 'TCP协议不保证最小的传输速率与传输延时', 'TCP协议能够保证数据字节按照流的方式传送到目的进程', 2);
INSERT INTO `course` VALUES (232, '以下关于DNS基本功能的描述中，错误的是（）。', 'c', 'DNS必须提供一个所有可能出现的结点命名的名字空间', 'DNS必须为每一台主机分配一个在全网具有唯一性的名字', 'DNS必须告知每一个用户所有DNS的IP地址', 'DNS要为用户提供一种有效地完成主机名与网络IP地址转换的机制', 2);
INSERT INTO `course` VALUES (233, '以下关于域名空间和资源记录,域名服务器与地址解析程序的关系的描述中，错误的是（）。', 'c', '域名空间是一个树形结构，用户可以从该树的任何一处开始遍历', '域名系统由数量未知的域名服务器构成，每个域名服务器是域名空间树的一部分', '地址解析程序将每一个域名系统使用的数据库视为动态的数据库', '域名服务器必须可以对来自于地址解析程序的请求进行并行处理', 2);
INSERT INTO `course` VALUES (234, '以下关于电子邮件系统特点的描述中，错误的是（）。', 'd', '电子邮件系统由邮件服务器端与邮件客户端两个部分组成', '邮件服务器端包括SMTP服务器,POP3服务器或IMaP服务器以及邮箱', '邮件客户端包括SMIP代理,POP3代理以及用户接口程序', 'IMaP是用于发送和接收多媒体邮件的协议', 2);
INSERT INTO `course` VALUES (235, '以下关于电子邮件的格式的描述中，错误的是（）。', 'b', '电子邮件包括邮件头与邮件体两部分', '邮件头是由系统自动生成的发信人地址（From：）,邮件发送的日期与时间，以及收信人地址（To：）,抄送人地址（Cc：）与邮件主题（Subject：）等', '邮件体就是实际要传送的信函内容', 'MIME协议允许电子邮件系统传输文字,图像,语言与视频等多种信息', 2);
INSERT INTO `course` VALUES (236, '以下关于邮件传输代理MTa与用户代理Ua的描述中，错误的是（）。', 'd', '互联网电子邮件系统将邮件工作系统与邮件的发送,接收系统分开', '邮件系统中存在着邮件传输代理（MTa）与用户代理（Ua）', '接收端用户从用户代理Ua中读取电子邮件', '中继MTa服务器在接收和发送邮件时都是作为服务器使用的', 2);
INSERT INTO `course` VALUES (237, '以下关于FTP协议工作模型的描述中，错误的是（）。', 'c', 'FTP协议使用控制连接,数据连接来完成文件的传输', '用于控制连接的TCP连接在服务器端使用的熟知端口号为21', '用于控制连接的TCP连接在客户端使用的端口号为20', '服务器端由控制进程,数据进程两个部分组成', 2);
INSERT INTO `course` VALUES (238, '以下关于HTTP协议特点的描述中，错误的是（）。', 'd', 'HTTP在传输层使用的是TCP协议', 'Web浏览器想访问一个Web服务器，需要在两个进程之间建立一个TCP连接', 'Web浏览器进程通过套接字发送HTTP请求报文，Web服务器发送应答报文', '如果传输的请求与应答报文丢失，将由Web浏览器与Web服务器端进程重发', 2);
INSERT INTO `course` VALUES (239, '以下关于HTTP持续连接的两种工作方式的描述中，错误的是（）。', 'd', 'HTTP持续连接有两种工作方式：非流水线方式与流水线方式', '非流水线方式的特点是：客户端只有在接收到前一个响应时才能够发出新的请求', '客户端像流水线作业一样持续地发送请求到服务器端', 'HTTP/1.1的默认状态是持续连接的非流水线工作方式', 2);
INSERT INTO `course` VALUES (240, '以下关于Web文档类型的描述中，错误的是（）。', 'c', 'Web文档分为3种类型：静态文档,动态文档和活动文档', '静态文档是由服务器创建和保存,内容固定的文档', '浏览器在客户端计算机中运行程序产生动态文档', '活动文档是一种二进制代码形式的文档', 2);
INSERT INTO `course` VALUES (241, '多媒体网络应用对端到端的服务质量的要求主要是带宽,延时,延时抖动与（）。', 'a', '误码率', '频率范围', '波特率', '链路效率', 2);
INSERT INTO `course` VALUES (242, '域名系统DNS必须具备的基本功能是名字空间定义,名字解析与（）。', 'd', 'IP地址注册', '名字转换', '端口地址注册', '名字注册', 2);
INSERT INTO `course` VALUES (243, '以下哪一项不属于名字空间定义的内容？（）', 'b', '层次名字体系结构', 'DNS地区与层次体系管理', 'DNS名字结构与命名规则', '域名规约', 2);
INSERT INTO `course` VALUES (244, '以下关于POP3协议特点的描述中，错误的是（）。', 'c', 'POP3协议提供将存储在目的SMTP服务器中的邮件报文传送到用户的机制', 'POP3协议有两种工作模式：删除模式和保留模式', '删除模式是在一次读取邮件后，只把读到客户端的邮件删除', '保留模式是在一次读取邮件后，仍然将读过的邮件保存在服务器中', 2);
INSERT INTO `course` VALUES (245, '以下关于FTP协议特点的描述中，错误的是（）。', 'd', 'FTP的客户端由用户接口,控制进程,数据进程三个部分组成', '服务器端由控制进程,数据进程两个部分组成', 'FTP协议使用控制连接与数据连接两个并行的TCP连接来完成文件的传输', '控制连接的TCP数值端口号为20；数据连接的TCP数值端口号为21', 2);
INSERT INTO `course` VALUES (246, '以下关于HTTP协议特点的描述中，错误的是（）。', 'c', 'HTTP在传输层使用的是TCP协议', 'HTTP协议属于无状态协议', 'HTTP/1.0版协议支持持续连接，不支持流水线工作方式', 'HTTP/1.1的默认状态是持续连接的流水线工作方式', 2);
INSERT INTO `course` VALUES (247, '以下关于Web浏览器结构的描述中，错误的是（）。', 'd', 'Web浏览器由一组客户,一组解释单元与一个管理它们的控制单元组成', '控制单元解释鼠标点击与键盘输入，并调用其他组件来执行用户指定的操作', 'HTTP解释器解释页面，并将解释的结构显示在用户屏幕上', '许多浏览器包含一个FTP解释器，用来获取GIP文件传输服务', 2);
INSERT INTO `course` VALUES (248, 'URL的一般正确格式为（）。', 'a', '协议：//(主机名)：(端口号)/(文件路径)', '(主机名)：//协议：(端口号)/(文件路径)', '协议：//(主机名)：(端口号)/(文件名)', '协议：//(端口号)：(主机名)/(文件路径)', 2);
INSERT INTO `course` VALUES (249, '使用FTP正确的URL格式为（）。', 'a', 'FTP：//(主机名)：(端口号)/(文件路径)', '(主机名)：//FTP：(端口号)/(文件路径)', 'FTP：//(主机名)：(端口号)/(文件名)', 'FTP：//(端口号)：(主机名)/(文件路径)', 2);
INSERT INTO `course` VALUES (250, '一般用户更喜欢使用的系统是（  ）。', 'c', '手工操作', '单道批处理', '多道批处理', '多用户分时系统', 3);
INSERT INTO `course` VALUES (251, '与计算机硬件关系最密切的软件是（ ）', 'd', '编译程序', '数据库管理程序', '游戏程序', 'OS', 3);
INSERT INTO `course` VALUES (252, '现代OS具有并发性和共享性，是由（ ）的引入而导致的', 'd', '单道程序', '磁盘', '对象', '多道程序', 3);
INSERT INTO `course` VALUES (253, '早期的OS主要追求的是（ ）。', 'a', '系统的效率', '用户的方便性', '可移植', '可扩充性', 3);
INSERT INTO `course` VALUES (254, '（ ）不是多道程序系统。', 'a', '单用户单任务', '多道批处理系统', '单用户多任务', '多用户分时系统', 3);
INSERT INTO `course` VALUES (255, '（ ）是多道操作系统不可缺少的硬件支持。', 'b', '打印机', '中断机构', '软盘', '鼠标', 3);
INSERT INTO `course` VALUES (256, '特权指令可以在（  ）中执行。', 'c', '目态', '浏览器中', '任意的时间', '进程调度中', 3);
INSERT INTO `course` VALUES (257, '没有了（  ）计算机系统就启动不起来了。', 'c', '编译器', 'DBMS', 'OS', '浏览器', 3);
INSERT INTO `course` VALUES (258, '通道能够完成（ ）之间数据的传输。', 'c', 'CPU与外设', '内存与外设', 'CPU与主存', '外设与外设', 3);
INSERT INTO `course` VALUES (259, '系统的主要功能有（ ）。', 'c', '进程管理、存储器管理、设备管理、处理机管理', '虚拟存储管理、处理机管理、进程调度、文件系统', '处理机管理、存储器管理、设备管理、文件系统', '进程管理、中断管理、设备管理、文件系统', 3);
INSERT INTO `course` VALUES (260, '单处理机计算机系统中，（  ）是并行操作的。', 'a', '处理机操作和通道操作是并行的', '程序与程序', '主程序与子程序', '用户程序与操作系统程序', 3);
INSERT INTO `course` VALUES (261, '处理机的所有指令可以在（ ）中执行。', 'd', '目态', '浏览器中', '任意时间', '系统态', 3);
INSERT INTO `course` VALUES (262, '（  ）功能不是操作系统直接完成的功能。', 'b', '管理计算机硬盘', '对程序进行编译', '实现虚拟存储器', '删除文件', 3);
INSERT INTO `course` VALUES (263, '要求在规定的时间内对外界的请求必须给予及时相应的OS是（  ）。', 'b', '多用户分时系统', '实时系统', '批处理系统时间', '网络操作系统', 3);
INSERT INTO `course` VALUES (264, '操作系统是对（ ）进行管理的软件。', 'c', '硬件', '软件', '计算机资源', '应用程序', 3);
INSERT INTO `course` VALUES (265, '（ ）对多用户分时系统最重要。', 'b', '实时性', '交互性', '共享性', '运行效率', 3);
INSERT INTO `course` VALUES (266, '（  ）对多道批处理系统最重要。', 'd', '实时性', '交互性', '共享性', '运行效率', 3);
INSERT INTO `course` VALUES (267, '（ ）对实时系统最重要。', 'a', '及时性', '交互性', '共享性', '运行效率', 3);
INSERT INTO `course` VALUES (268, 'Windows 98 是（ ）操作系统。', 'c', '多用户分时', '批处理系统', '单用户多任务', '单用户单任务', 3);
INSERT INTO `course` VALUES (269, '分布式系统和网络系统的主要区别是（  ）', 'c', '并行性', '透明性', '共享性', '复杂性', 3);
INSERT INTO `course` VALUES (270, '（  ）操作系统允许在一台主机上同时连接多台终端，多个用户可以通过各自的终端同时交互的使用计算机。', 'a', '网络', '分布式', '分时', '实时', 3);
INSERT INTO `course` VALUES (271, '如果分时操作系统的时间片一定，那么（ ），则相应时间越长。', 'b', '用户数越少', '用户数越多', '内存越小', '内存越大', 3);
INSERT INTO `course` VALUES (272, '下面六个系统中，必须是实时操作系统的有（ ）个。(1)航空订票系统  (2)过程控制系统  (3)机器口语翻译系统 (4)计算机辅助系统 (5)办公自动化系统 (6)计算机激光照排系统', 'c', '1', '2', '3', '4', 3);
INSERT INTO `course` VALUES (274, ' OS的不确定性是指（  ）。', 'd', '程序的运行结果不确定', '程序的运行次序不确定', '程序多次运行的时间不确定', 'A、B和C', 3);
INSERT INTO `course` VALUES (275, '下面那一个不是程序宰并发系统内执行的特点（   ）。', 'b', '程序执行的间断性', '相互通信的可能性', '产生死锁的必然性', '资源分配的动态性', 3);
INSERT INTO `course` VALUES (276, '在下面关于并发性的叙述众正确的是（   ）。', 'c', '并发性是指若干事件在同一时刻发生', '并发性是指若干事件在不同时刻发生', '并发性是指若干事件在同一时间间隔发生', '并发性是指若干事件在不同时间间隔发生', 3);
INSERT INTO `course` VALUES (277, '一般来说，为了实现多道程序设计，计算机最需要（  ）。', 'a', '更大的内存', '更多的外设', '更快的CPU', '更先进的终端', 3);
INSERT INTO `course` VALUES (278, 'Unix操作系统的进程控制块中常驻内存的是(    )。', 'b', 'proc结构', 'proc结构和核心栈', 'ppda区', 'proc结构和user结构', 3);
INSERT INTO `course` VALUES (279, '当(  )时，进程从执行状态转变为就绪状态。', 'b', '进程被调度程序选中', '时间片到', '等待某一事件', '等待的事件发生', 3);
INSERT INTO `course` VALUES (280, '在进程状态转换时，下列(  )转换是不可能发生的。', 'd', '就绪态→运行态', '运行态→就绪态', '运行态→阻塞态', '阻塞态→运行态', 3);
INSERT INTO `course` VALUES (281, '下列各项工作步骤中，(   )是创建进程所必需的步骤。', 'b', '建立一个PCB', '作业调度程序为进程分配CPU', '为进程分配内存等资源', '将PCB链入进程就绪队列', 3);
INSERT INTO `course` VALUES (282, '下列关于进程的叙述中，正确的是(   )。', 'd', '进程通过进程调度程序而获得CPU', '优先级是进行进程调度的重要依据，一旦确定不能改变', '在单CPU系统中，任一时刻都有1个进程处于运行状态', '进程申请CPU得不到满足时，其状态变为等待状态', 3);
INSERT INTO `course` VALUES (283, '从资源管理的角度看，进程调度属于(   )。', 'c', 'I/O管理', '文件管理', '处理机管理', '存储器管理', 3);
INSERT INTO `course` VALUES (284, '下列有可能导致一进程从运行变为就绪的事件是(   )。', 'd', '一次I/O操作结束', '运行进程需作I/O操作', '运行进程结束', '出现了比现运行进程优先权更高的进程', 3);
INSERT INTO `course` VALUES (285, '一个进程释放一种资源将有可能导致一个或几个进程(    )。', 'a', '由就绪变运行', '由运行变就绪', '由阻塞变运行', '由阻塞变就绪', 3);
INSERT INTO `course` VALUES (286, ' 一次I/O操作的结束，有可能导致(   )。', 'c', '一个进程由睡眠变就绪', '几个进程由睡眠变就绪', '一个进程由睡眠变运行', '几个进程由睡眠变运行', 3);
INSERT INTO `course` VALUES (287, '当一个进程从CPU上退下来时，它的状态应变为(   )。', 'c', '静止就绪', '活动就绪', '静止睡眠', '活动睡眠', 3);
INSERT INTO `course` VALUES (288, '为使进程由活动就绪变为静止就绪，应利用(    )原语？', 'a', 'Suspend', 'Active', 'Block', 'Wakeup', 3);
INSERT INTO `course` VALUES (289, '在下面的叙述中，不正确的是(   )。', 'd', '一个进程可创建一个或多个线程', '一个线程可创建一个或多个线程', '一个线程可创建一个或多个线程', '一个进程可创建一个或多个进程', 3);
INSERT INTO `course` VALUES (290, '若系统中只有用户级线程，则处理机调度单位是(   )。', 'a', '线程', '进程', '程序', '作业', 3);
INSERT INTO `course` VALUES (291, '一个进程是(   )。', 'c', '由协处理机执行的一个程序', '一个独立的程序+数据集', 'PCB结构与程序和数据的组合', '一个独立的程序', 3);
INSERT INTO `course` VALUES (292, '下列几种关于进程的叙述，(    )最不符合操作繁育地进程的理解？', 'b', '进程是在多程序并行环境中的完整的程序', '进程可以由程序、数据和进程控制描述', '线程是一种特殊的进程', '进程是程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位', 3);
INSERT INTO `course` VALUES (293, ' 在下面的叙述中正确的是(   )。', 'b', '线程是比进程更小的能独立运行的基本单位', '引入线程可提高程序并发执行的程度，可进一步提高系统效率', '线程的引入增加了程序执行时时空开销', '一个进程一定包含多个线程', 3);
INSERT INTO `course` VALUES (294, '下面关于线程的叙述中，正确的是(   )。', 'a', '不论是系统支持线程还是用户级线程，其切换都需要内核的支持', '线程是资源的分配单位，进程是调度和分配的单位', '不管系统中是否有线程，进程都是拥有资源的独立单位', '在引入线程的系统中，进程仍是资源分配和调度分派的基本单位', 3);
INSERT INTO `course` VALUES (295, '在下面的叙述中，正确的是(    )。', 'd', '引入线程后，处理机只在线程间切换', '引入线程后，处理机仍在进程间切换', '线程的切换，不会引起进程的切换', '线程的切换，可能引起进程的切换', 3);
INSERT INTO `course` VALUES (296, '进程的控制信息和描述信息存放在(   )。', 'b', 'JCB', 'PCB', 'AFT', 'SFT', 3);
INSERT INTO `course` VALUES (297, '进程依靠(   )从阻塞状态过渡到就绪状态。', 'd', '程序员的命令', '系统服务', '等待下一个时间片到来', '\"合作\"进程的唤醒', 3);
INSERT INTO `course` VALUES (298, '在Windows NT中(   )可以处于就绪状态。', 'a', '进程', '线程', '程序', '作业', 3);
INSERT INTO `course` VALUES (299, '只作用于一个进程一次的原语是(   )。', 'a', '创立', '解挂', '阻塞', '挂起', 3);
INSERT INTO `course` VALUES (300, '在Unix系统中，处于(   )状态的进程最容易被执行。', 'c', '辅存睡眠', '内存睡眠', '内存就绪', '辅存就绪', 3);
INSERT INTO `course` VALUES (301, '从执行状态挂起的进程解除挂起时进入(   )状态。', 'a', '就绪', '执行', '阻塞', '挂起', 3);
INSERT INTO `course` VALUES (302, '一个进程执行过程中不可能对应(    )。', 'c', '一个PBC', '一个JCB', '多个PCB', '一个程序', 3);
INSERT INTO `course` VALUES (303, '用P、V操作管理临界区时，信号量的初值一般应定义为（   ）。', 'c', '-1', '0', '1', '任意值', 3);
INSERT INTO `course` VALUES (304, '有m个进程共享同一临界资源，若使用信号量机制实现对一临界资源的互斥访问，则信号量的变化范围是（   ）。', 'c', '1至－（m－1）', '1至m－1', '1至－m', '1至m', 3);
INSERT INTO `course` VALUES (305, '在下面的叙述中正确的是（  ）。', 'c', '临界资源是非共享资源', '临界资源是任意共享资源', '临界资源是互斥共享资源', '临界资源是同时共享资源', 3);
INSERT INTO `course` VALUES (306, '对进程间互斥的使用临界资源，进程可以（  ）。', 'b', '互斥的进入临界区', '互斥的进入各自的临界区', '互斥的进入同一临界区', '互斥的进入各自的同类资源临界区', 3);
INSERT INTO `course` VALUES (307, '设两个进程共用一个临界资源的互斥信号量mutex，当mutex＝1时表示（ ）。', 'b', '一个进程进入了临界区，另一个进程等待', '没有一个进程进入临界区', '两个进程都进入临界区', '两个进程都在等待', 3);
INSERT INTO `course` VALUES (308, '设两个进程共用一个临界资源的互斥信号量mutex，当mutex＝－1时表示（ ）。', 'c', '一个进程进入了临界区，另一个进程等待', '没有一个进程进入临界区', '两个进程都进入临界区', '两个进程都在等待', 3);
INSERT INTO `course` VALUES (309, '当一进程因在记录型信号量S上执行P（S）操作而被阻塞后，S的值为（ ）。', 'b', '＞0', '＜0', '≥0', '≤0', 3);
INSERT INTO `course` VALUES (310, '当一进程因在记录型信号量S上执行V（S）操作而导致唤醒另一进程后，S的值为（ ）。', 'b', '＞0', '＜0', '≥0', '≤0', 3);
INSERT INTO `course` VALUES (311, '如果信号量的当前值为－4，则表示系统中在该信号量上有（ ）个进程等待。', 'a', '4', '3', '5', '0', 3);
INSERT INTO `course` VALUES (312, '若有4个进程共享同一程序段，而且每次最多允许3个进程进入该程序段，则信号量的变化范围是（  ）。', 'b', '3，2，1，0', '3，2，1，0，－1', '4，3，2，1，0', '2，1，0，－1，－2', 3);
INSERT INTO `course` VALUES (313, '若信号S的初值为2，当前值为－1，则表示有（ 　）个等待进程。', 'b', '0', '1', '2', '3', 3);
INSERT INTO `course` VALUES (314, '并发进程之间（   ）。', 'a', '彼此无关', '必须同步', '必须互斥', '可能需要同步或互斥', 3);
INSERT INTO `course` VALUES (315, '某系统采用了银行家算法，则下列叙述正确的是（  ）。', 'c', '系统处于不安全状态时一定会发生死锁', '系统处于不安全状态时可能会发生死锁', '系统处于安全状态时可能会发生死锁', '系统处于安全状态时一定会发生死锁', 3);
INSERT INTO `course` VALUES (316, '银行家算法中的数据结构包括有可利用资源向量Available、最大需求矩阵Max、分配矩阵Allocation、需求矩阵Need，下列选项中表述正确的是（  ）。', 'b', 'Max[i,j]= Allocation[i,j]+Need[i,j]', 'Need[i,j]= Max[i,j] －Allocation[i,j]', 'Max[i,j]= Allocation[i,j] －Need[i,j]', 'Need[i,j]= Max[i,j]+Allocation[i,j]', 3);
INSERT INTO `course` VALUES (317, '下列进程调度算法中，（  ）可能会出现进程长期得不到调度的情况。', 'b', '非强占式静态优先权法', '强占式静态优先权法', '时间片轮转调度算法', '非强占式动态优先权法', 3);
INSERT INTO `course` VALUES (318, '在下列选项中，属于预防死锁的方法是（  ）。', 'b', '剥夺资源法', '资源分配图简化法', '资源随意分配', '银行家算法', 3);
INSERT INTO `course` VALUES (319, '在下列选项中，属于检测死锁的方法是（  ）。', 'd', '银行家算法', '消进程法', '资源静态分配法', '资源分配图简化法', 3);
INSERT INTO `course` VALUES (320, '在下列选项中，属于解除死锁的方法是（  ）。', 'a', '剥夺资源法', '资源分配图简化法', '银行家算法', '资源静态分配法', 3);
INSERT INTO `course` VALUES (321, '为了照顾紧迫型作业，应采用（   ）。', 'd', '先来先服务调度算法', '短作业优先调度算法', '时间片轮转调度算法', '优先权调度算法', 3);
INSERT INTO `course` VALUES (322, '在采用动态优先权的优先权调度算法中，如果所有进程都具有相同优先权初值，则此时的优先权调度算法实际上和（ ）相同。', 'a', '先来先服务调度算法', '短作业优先调度算法', '时间片轮转调度算法', '长作业优先调度算法', 3);
INSERT INTO `course` VALUES (323, '作业从后备作业到被调度程序选中的时间称为（  ）。', 'c', '周转时间', '响应时间', '等待调度时间', '运行时间', 3);
INSERT INTO `course` VALUES (324, '资源静态分配法可以预防死锁的发生，因为使死锁四个条件中的（ ）不成立。', 'd', '互斥条件', '请求和保持条件', '不可剥夺条件', '环路等待条件', 3);
INSERT INTO `course` VALUES (325, '分页存储管理的存储保护是通过（  ）完成的。', 'a', '页表（页表寄存器）', '快表', '存储键', '索引动态重定', 3);
INSERT INTO `course` VALUES (326, '把作业地址空间中使用的逻辑地址变成内存中物理地址称为（ ）。', 'b', '加载', '重定位', '物理化', '逻辑化', 3);
INSERT INTO `course` VALUES (327, '在可变分区存储管理中的紧凑技术可以（ ）。', 'a', '集中空闲区', '增加主存容量', '缩短访问时间', '加速地址转换', 3);
INSERT INTO `course` VALUES (328, '在存储管理中，采用覆盖与交换技术的目的是（  ）。', 'a', '减少程序占用的主存空间', '物理上扩充主存容量', '提高CPU效率', '代码在主存中共享', 3);
INSERT INTO `course` VALUES (329, '存储管理方法中，（  ）用户可采用覆盖技术。', 'd', '单一连续区', '可变分区存储管理', '段式存储管理', '段页式存储管理', 3);
INSERT INTO `course` VALUES (330, '把逻辑地址转换程物理地址称为（  ）。', 'b', '地址分配', '地址映射', '地址保护', '地址越界', 3);
INSERT INTO `course` VALUES (331, '在内存分配的\"最佳适应法\"中，空闲块是按（  ）。', 'd', '始地址从小到大排序', '始地址从大到小排序', '块的大小从小到大排序', '块的大小从大到小排序', 3);
INSERT INTO `course` VALUES (332, '在分区存储管理中，下面的（  ）最有可能使得高地址空间变成为大的空闲区。', 'a', '首次适应法', '最佳适应法', '最坏适应法', '循环首次适应法', 3);
INSERT INTO `course` VALUES (333, '段的逻辑地址形式是段号10位，段内地址20位，内存1MB，辅存10GB。那么虚拟存储器最大实际容量可能是（ ）。', 'b', '1024KB', '1024MB', '10GB', '10GB+1MB', 3);
INSERT INTO `course` VALUES (334, '用空白链记录内存空白块的主要缺点是（  ）。', 'a', '链指针占用了大量的空间', '分配空间时可能需要一定的查链时间', '不好实现\"首次适应法\"', '不好实现\"最佳适应法\"', 3);
INSERT INTO `course` VALUES (335, '一般而言，计算机中（  ）容量（个数）最多。', 'a', 'ROM', 'RAM', 'CPU', '虚拟存储器', 3);
INSERT INTO `course` VALUES (336, '分区管理和分页管理的主要区别是（  ）。', 'd', '分区中的块比分页中的页要小', '分页有地址映射而分区没有', '分页有存储保护而分区没有', '分区要求一道程序存放在连续的空间内而分页没有这种要求', 3);
INSERT INTO `course` VALUES (337, '静态重定位的时机是（  ）.', 'c', '程序编译时', '程序链接时', '程序装入时', '程序运行时', 3);
INSERT INTO `course` VALUES (338, '通常所说的\"存储保护\"的基本含义是（   ）。', 'c', '防止存储器硬件受损', '防止程序在内存丢失', '防止程序间相互越界访问', '防止程序被人偷看', 3);
INSERT INTO `course` VALUES (339, '能够装入内存任何位置的代码程序必须是（  ）。', 'c', '可重入的', '可定位的', '可动态链接的', '可静态链接的', 3);
INSERT INTO `course` VALUES (340, '虚存管理和实存管理的主要区别是（  ）。', 'a', '虚存分逻辑地址和物理地址，实存不分', '实存要求一程序在内存必须连续，虚存不需要连续的内存', '实存要求一程序全部装入内存才开始运行，虚存允许程序在执行的过程中逐步装入', '虚存以逻辑地址执行程序，实存以物理地址执行程序', 3);
INSERT INTO `course` VALUES (341, '在下列有关请求分页管理的叙述中，正确的是（  ）。', 'b', '程序和数据是在开始执行前一次性装入的', '产生缺页中断一定要淘汰一个页面', '一个淘汰的页面一定要写回外存', '在页表中要有\"中断位\"、\"访问位\"等信息', 3);
INSERT INTO `course` VALUES (342, 'LRU置换算法所基于的思想是（  ）。', 'd', '在最近的过去用得少的在最近的将来也用得少', '在最近的过去用得多的在最近的将来也用得多', '在最近的过去很久未使用的在最近的将来会使用', '在最近的过去很久未使用的在最近的将来也不会使用', 3);
INSERT INTO `course` VALUES (343, '在下面关于虚拟存储器的叙述中，正确的是（  ）。', 'b', '要求程序运行前必须全部装入内存且在运行过程中一直驻留在内存', '要求程序运行前不必全部装入内存且在运行过程中不必一直驻留在内存', '要求程序运行前不必全部装入内存但是在运行过程中必须一直驻留在内存', '要求程序运行前必须全部装入内存但在运行过程中不必一直驻留在内存', 3);
INSERT INTO `course` VALUES (344, '在请求分页系统中，页表中的改变位是供（  ）参考的。', 'c', '页面置换', '内存分配', '页面换出', '页面调入', 3);
INSERT INTO `course` VALUES (345, '在请求分页系统中，页表中的访问位是供（  ）参考的。', 'a', '页面置换', '内存分配', '页面换出', '页面调入', 3);
INSERT INTO `course` VALUES (346, '在请求分页系统中，页表中的辅存始地址是供（  ）参考的。', 'b', '页面置换', '内存分配', '页面换出', '页面调入', 3);
INSERT INTO `course` VALUES (347, '适应于请求段的内存分配方法是（  ）。', 'd', '首次适应和最佳适应', '固定分区和可变分区', '首次适应和固定分区', '最佳适应和可变分区', 3);
INSERT INTO `course` VALUES (348, '在请求分页管理中，已修改过的页面再次装入时应来自（   ）。', 'b', '磁盘文件区', '磁盘对换区', '后备作业区', 'I/O缓冲区', 3);
INSERT INTO `course` VALUES (349, '选择在最近的过去使用次数最少的页面予以淘汰的算法称为（ ）。', 'b', 'Opt', 'LRU', 'MFU', 'LFU', 3);
INSERT INTO `course` VALUES (350, '选择在最近的过去很久未访问的页面予以淘汰的算法称为（  ）。', 'b', 'Opt', 'LRU', 'MFU', 'LFU', 3);
INSERT INTO `course` VALUES (352, '研究数据结构就是研究( )', 'd', '数据的逻辑结构', '数据的存储结构', '数据的逻辑结构和存储结构', '数据的逻辑结构、存储结构及其基本操作', 4);
INSERT INTO `course` VALUES (353, '算法分析的两个主要方面是( )', 'a', '空间复杂度和时间复杂度', '正确性和简单性', '可读性和文档性', '数据复杂性和程序复杂性', 4);
INSERT INTO `course` VALUES (354, '具有线性结构的数据结构是( )', 'd', '图', '树', '广义表', '栈', 4);
INSERT INTO `course` VALUES (355, '计算机中的算法指的是解决某一个问题的有限运算序列，它必须具备输入、输出、（ ）等5个特性', 'b', '可执行性、可移植性和可扩充性', '可执行性、有穷性和确定性', '确定性、有穷性和稳定性', '易读性、稳定性和确定性', 4);
INSERT INTO `course` VALUES (356, '下面程序段的时间复杂度是（ ）for(i=0;i<m;i++)for(j=0;j<n;j++)a[i][j]=i*j', 'c', 'O(m2)', 'O(n2)', 'O(m*n)', 'O(m+n)', 4);
INSERT INTO `course` VALUES (357, '算法是（ ）', 'd', '计算机程序', '解决问题的计算方法', '排序算法', '解决问题的有限运算序列', 4);
INSERT INTO `course` VALUES (358, '某算法的语句执行频度为（3n+nlog2n+n2+8）,其时间复杂度表示( )', 'c', 'O(n)', 'O(nlog2n)', 'O(n2)', 'O(log2n)', 4);
INSERT INTO `course` VALUES (359, '下面程序段的时间复杂度为( )i=1;while(i<=n)i=i*3;', 'c', 'O(n)', 'O(3n)', 'O(log3n)', 'O(n3) ', 4);
INSERT INTO `course` VALUES (360, '数据结构是一门研究非数值计算的程序设计问题中计算机的数据元素以及它们之间的（ ）和运算等的学科', 'b', '结构', '关系', '运算', '算法', 4);
INSERT INTO `course` VALUES (361, '下面程序段的时间复杂度是（ ）i=s=0;while(s<n){i++;s+=i;}', 'a', 'O(n)', 'O(n2)', 'O(log2n)', 'O(n3)', 4);
INSERT INTO `course` VALUES (362, '抽象数据类型的三个组成部分分别为( )', 'a', '数据对象、数据关系和基本操作', '数据元素、逻辑结构和存储结构', '数据项、数据元素和数据类型', '数据元素、数据结构和数据类型', 4);
INSERT INTO `course` VALUES (363, '通常从正确性、易读性、健壮性、高效性等4个方面评价算法的质量，以下解释错误的是（ ）', 'd', '正确性算法应能正确地实现预定的功能', '易读性算法应易于阅读和理解，以便调试、修改和扩充', '健壮性当环境发生变化时，算法能适当地做出反应或进行处理，不会产生不需要的运行结果', '高效性即达到所需要的时间性能', 4);
INSERT INTO `course` VALUES (365, '若长度为n的线性表采用顺序存储结构，在其第i个位置插入一个新元素算法的时间复杂度（ ）', 'c', 'O(log2n)', 'O(1)', 'O(n)', 'O(n2)', 4);
INSERT INTO `course` VALUES (366, '若一个线性表中最常用的操作是取第i个元素和找第i个元素的前趋元素，则采用（ ）存储方式最节省时间。', 'a', '顺序表', '单链表', '双链表', '单循环链表', 4);
INSERT INTO `course` VALUES (367, '具有线性结构的数据结构是（ ）', 'd', '图', '树', '广义表', '栈', 4);
INSERT INTO `course` VALUES (368, '链表不具有的特点是（   ）。', 'a', '可随机访问任一元素', '插入删除不需要移动元素', '不必事先估计存储空间', '所需空间与线性表长度成正比', 4);
INSERT INTO `course` VALUES (369, '线性表采用链式存储时，结点的存储地址（   ）。', 'c', '必须是连续的', '必须是不连续的', '连续与否均可', '和头结点的存储地址相连续', 4);
INSERT INTO `course` VALUES (370, '线性表是n个（   ）的有限序列。', 'c', '表元素', '字符', '数据元素', '数据项 ', 4);
INSERT INTO `course` VALUES (371, '从表中任一结点出发，都能扫描整个表的是（   ）。', 'c', '单链表', '顺序表', '循环链表', '静态链表', 4);
INSERT INTO `course` VALUES (372, '线性表L=(a1,a2,……,an)，下列说法正确的是（   ）。', 'd', '每个元素都有一个直接前驱和一个直接后继', '线性表中至少要有一个元素', '表中诸元素的排列顺序必须是由小到大或由大到小', '除第一个和最后一个元素外，其余每个元素都由一个且仅有一个直接前驱和直接后继', 4);
INSERT INTO `course` VALUES (373, '一个顺序表的第一个元素的存储地址是90，每个元素的长度为2，则第6个元素的存储地址是（   ）。', 'b', '98', '100', '102', '106', 4);
INSERT INTO `course` VALUES (374, '在线性表的下列存储结构中，读取元素花费的时间最少的是（   ）', 'd', '单链表', '双链表', '循环链表', '顺序表', 4);
INSERT INTO `course` VALUES (376, '线性表的顺序存储结构是一种（   ）存储结构。', 'a', '随机存取', '顺序存取', '索引存取', '散列存取', 4);
INSERT INTO `course` VALUES (377, '循环链表的主要优点是（   ）。', 'd', '不再需要头指针', '已知某结点位置后能容易找到其直接前驱', '在进行插入、删除运算时能保证链表不断开', '在表中任一结点出发都能扫描整个链表 ', 4);
INSERT INTO `course` VALUES (378, '在下列对顺序表进行的操作中，算法时间复杂度为O(1)的是（   ）。', 'a ', '访问第i个元素的前驱（1<', '在第i个元素之后插入一个新元素(', '删除第i个元素(', '对顺序表中元素进行排序', 4);
INSERT INTO `course` VALUES (379, '在以下的叙述中，正确的是（   ）。', 'c', '线性表的顺序存储结构优于链表存储结构', '线性表的顺序存储结构适用于频繁插入/删除数据元素的情况', '线性表的链表存储结构适用于频繁插入/删除数据元素的情况', '线性表的链表存储结构优于顺序存储结构', 4);
INSERT INTO `course` VALUES (380, '一个栈的输入序列为：a，b，c，d，e，则栈的不可能输出的序列是（   ）。', 'c', 'a,b,c,d,e', 'd,e,c,b,a', 'd,c,e,a,b         ', 'e,d,c,b,a', 4);
INSERT INTO `course` VALUES (381, '设计一个判别表达式中括号是否配对的算法，采用（   ）数据结构最佳。', 'd', '顺序表', '链表', '队列', '栈', 4);
INSERT INTO `course` VALUES (382, '一个栈的输入序列为：1,2,3,4，则栈的不可能输出的序列是（   ）。', 'd', '1243', '2134', '1432', '4312', 4);
INSERT INTO `course` VALUES (383, '若用一个大小为6的数组来实现循环队列，且当rear和front的值分别为0，3。当从队列中删除一个元素，再加入两个元素后，rear和front的值分别为（   ）。', 'b', '1和5', '2和4', '4和2', '5和1', 4);
INSERT INTO `course` VALUES (384, '队列的插入操作是在（   ）。', 'a', '队尾', '队头', '队列任意位置', '队头元素后', 4);
INSERT INTO `course` VALUES (385, '循环队列的队头和队尾指针分别为front和rear，则判断循环队列为空的条件是（   ）。', 'a', 'front==rear', 'front==0', 'rear==0', 'front=rear+1', 4);
INSERT INTO `course` VALUES (386, '将递归算法转换成对应的非递归算法时，通常需要使用（   ）来保存中间结果。', 'b', '队列', '栈', '链表', '树', 4);
INSERT INTO `course` VALUES (387, '栈的插入和删除操作在（   ）。', 'b', '栈底', '栈顶', ' 任意位置', '指定位置', 4);
INSERT INTO `course` VALUES (388, '五节车厢以编号1，2，3，4，5顺序进入铁路调度站（栈），可以得到（   ）的编组。', 'c', '3，4，5，1，2', '2，4，1，3，5', '3，5，4，2，1', '1，3，5，2，4', 4);
INSERT INTO `course` VALUES (389, '一个队列的入队序列是1，2，3，4，则队列的出队序列是（   ）。', 'b', '1，2，3，4', '4，3，2，1 ', '1，4，3，2', '3，4，1，2', 4);
INSERT INTO `course` VALUES (390, '依次在初始为空的队列中插入元素a,b,c,d以后，紧接着做了两次删除操作，此时的队头元素是（   ）。', 'c', 'a ', 'b', 'c', 'd', 4);
INSERT INTO `course` VALUES (391, '正常情况下，删除非空的顺序存储结构的堆栈的栈顶元素，栈顶指针top的变化是（   ）。', 'd', 'top不变', 'top=0', 'top=top+1', 'top=top', 4);
INSERT INTO `course` VALUES (392, '设计一个判别表达式中左右括号是否配对出现的算法，采用（   ）数据结构最佳。', 'c', '线性表的顺序存储结构 ', '队列', '栈', '线性表的链式存储结构', 4);
INSERT INTO `course` VALUES (393, '若让元素1，2，3依次进栈，则出栈次序不可能是（   ）。', 'c', '3，2，1', '2，1，3', '3，1，2', '1，3，2', 4);
INSERT INTO `course` VALUES (394, '在解决计算机主机和打印机之间速度不匹配问题时，通常设置一个打印数据缓冲区，主机将要输出的数据依次写入该缓冲区，而打印机则从该缓冲区中取走数据打印。该缓冲区应该是一个（   ）结构。', 'b', '堆栈', '队列', '数组', '线性表', 4);
INSERT INTO `course` VALUES (395, '栈和队列都是（   ）。', 'c', '链式存储的线性结构', '链式存储的非线性结构', '限制存取点的线性结构', '限制存取点的非线性结构', 4);
INSERT INTO `course` VALUES (396, '队和栈的主要区别是（   ）。', 'a', '逻辑结构不同', '存储结构不同', '所包含的运算个数不同', '限定插入和删除的位置不同', 4);
INSERT INTO `course` VALUES (397, '设有两个串S1和S2，求串S2在S1中首次出现位置的运算称作（   ）。', 'c', '连接', '求子串', '模式匹配', '判断子串', 4);
INSERT INTO `course` VALUES (398, '已知串S=’aaab’，则next数组值为（   ）。', 'a', '123', '1123', '1231', '1211', 4);
INSERT INTO `course` VALUES (399, '串与普通的线性表相比较，它的特殊性体现在（  ）。', 'c', '顺序的存储结构', '链式存储结构', '数据元素是一个字符', '数据元素任意', 4);
INSERT INTO `course` VALUES (400, '设串长为n，模式串长为m，则KMP算法所需的附加空间为（  ）。', 'a', 'O(m)', 'O(n)', 'O(m*n)', 'O(nlog2m)', 4);
INSERT INTO `course` VALUES (401, '空串和空格串（  ）。', 'b', '相同', '不相同', '可能相同', '无法确定', 4);
INSERT INTO `course` VALUES (403, '设SUBSTR(S,i,k)是求S中从第i个字符开始的连续k个字符组成的子串的操作，则对于S=’Beijing&Nanjing’，SUBSTR(S,4,5)=（  ）。', 'b', '‘ijing’', '‘jing&’', '‘ingNa’', '‘ing&N’', 4);
INSERT INTO `course` VALUES (404, '设广义表L=((a，b，c))，则L的长度和深度分别为（   ）。', 'c', '1和1', '1和3 ', '1和2 ', '2和3', 4);
INSERT INTO `course` VALUES (405, '广义表((a),a)的表尾是（   ）。', 'b', 'a', '(a)', '()', '((a))', 4);
INSERT INTO `course` VALUES (406, '稀疏矩阵的常见压缩存储方法有（   ）两种。', 'c', '二维数组和三维数组', '三元组和散列表', '三元组和十字链表', '散列表和十字链表', 4);
INSERT INTO `course` VALUES (407, '一个非空广义表的表头（   ）。', 'd', '不可能是子表', '只能是子表', '只能是原子', '可以是子表或原子', 4);
INSERT INTO `course` VALUES (408, '广义表G=(a,b(c,d,(e,f)),g)的长度是（   ）。', 'a', '3', '4', '7', '8', 4);
INSERT INTO `course` VALUES (409, '采用稀疏矩阵的三元组表形式进行压缩存储，若要完成对三元组表进行转置，只要将行和列对换，这种说法（  ）。', 'b', '正确', '错误', '无法确定', '以上均不对', 4);
INSERT INTO `course` VALUES (410, '广义表(a,b,c)的表尾是（   ）。', 'b', 'b,c', '(b,c)', 'c', '(c)', 4);
INSERT INTO `course` VALUES (411, '常对数组进行两种基本操作是（   ）。', 'd', '建立和删除', '索引和修改', '查找和修改', '查找与索引', 4);
INSERT INTO `course` VALUES (412, '对一些特殊矩阵采用压缩存储的目的主要是为了（   ）。', 'd', '表达变得简单', '对矩阵元素的存取变得简单', '去掉矩阵中的多余元素', '减少不必要的存储空间的开销', 4);
INSERT INTO `course` VALUES (413, '广义表A=((a),a)的表头是（   ）。', 'b', 'a', '(a)', 'b', '((a))', 4);

-- ----------------------------
-- Table structure for suggestion
-- ----------------------------
DROP TABLE IF EXISTS `suggestion`;
CREATE TABLE `suggestion`  (
  `suggestion` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '用户的反馈和建议',
  `id` int NOT NULL AUTO_INCREMENT,
  `date` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 16 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of suggestion
-- ----------------------------

SET FOREIGN_KEY_CHECKS = 1;
